<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>copyout (1 samples, 0.20%)</title><rect x="440.8" y="277" width="2.4" height="15.0" fill="rgb(241,203,26)" rx="2" ry="2" />
<text  x="443.83" y="287.5" ></text>
</g>
<g >
<title>cpuidle_select (1 samples, 0.20%)</title><rect x="1182.8" y="309" width="2.4" height="15.0" fill="rgb(206,94,26)" rx="2" ry="2" />
<text  x="1185.82" y="319.5" ></text>
</g>
<g >
<title>do_execveat_common (1 samples, 0.20%)</title><rect x="1036.8" y="389" width="2.4" height="15.0" fill="rgb(252,108,5)" rx="2" ry="2" />
<text  x="1039.82" y="399.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.20%)</title><rect x="29.1" y="421" width="2.4" height="15.0" fill="rgb(207,209,0)" rx="2" ry="2" />
<text  x="32.15" y="431.5" ></text>
</g>
<g >
<title>__fsnotify_parent (1 samples, 0.20%)</title><rect x="153.6" y="357" width="2.4" height="15.0" fill="rgb(228,228,36)" rx="2" ry="2" />
<text  x="156.61" y="367.5" ></text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.20%)</title><rect x="10.0" y="373" width="2.4" height="15.0" fill="rgb(242,153,36)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.61%)</title><rect x="1039.2" y="437" width="7.2" height="15.0" fill="rgb(235,85,1)" rx="2" ry="2" />
<text  x="1042.21" y="447.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (139 samples, 28.19%)</title><rect x="184.7" y="309" width="332.7" height="15.0" fill="rgb(226,213,33)" rx="2" ry="2" />
<text  x="187.73" y="319.5" >generic_file_buffered_read</text>
</g>
<g >
<title>atime_needs_update (1 samples, 0.20%)</title><rect x="230.2" y="293" width="2.4" height="15.0" fill="rgb(242,116,14)" rx="2" ry="2" />
<text  x="233.20" y="303.5" ></text>
</g>
<g >
<title>update_sg_lb_stats (1 samples, 0.20%)</title><rect x="1158.9" y="101" width="2.4" height="15.0" fill="rgb(227,31,6)" rx="2" ry="2" />
<text  x="1161.88" y="111.5" ></text>
</g>
<g >
<title>__fget_light (2 samples, 0.41%)</title><rect x="139.2" y="373" width="4.8" height="15.0" fill="rgb(222,133,19)" rx="2" ry="2" />
<text  x="142.25" y="383.5" ></text>
</g>
<g >
<title>exec_binprm (1 samples, 0.20%)</title><rect x="1036.8" y="357" width="2.4" height="15.0" fill="rgb(241,1,3)" rx="2" ry="2" />
<text  x="1039.82" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title><rect x="1187.6" y="437" width="2.4" height="15.0" fill="rgb(222,40,22)" rx="2" ry="2" />
<text  x="1190.61" y="447.5" ></text>
</g>
<g >
<title>find_get_entry (2 samples, 0.41%)</title><rect x="19.6" y="245" width="4.8" height="15.0" fill="rgb(214,24,42)" rx="2" ry="2" />
<text  x="22.57" y="255.5" ></text>
</g>
<g >
<title>move_queued_task (1 samples, 0.20%)</title><rect x="845.3" y="373" width="2.4" height="15.0" fill="rgb(246,17,34)" rx="2" ry="2" />
<text  x="848.33" y="383.5" ></text>
</g>
<g >
<title>drm_gem_vmap (5 samples, 1.01%)</title><rect x="12.4" y="357" width="12.0" height="15.0" fill="rgb(230,141,19)" rx="2" ry="2" />
<text  x="15.39" y="367.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (12 samples, 2.43%)</title><rect x="1158.9" y="437" width="28.7" height="15.0" fill="rgb(205,92,12)" rx="2" ry="2" />
<text  x="1161.88" y="447.5" >x8..</text>
</g>
<g >
<title>tick_nohz_idle_stop_tick (1 samples, 0.20%)</title><rect x="1156.5" y="373" width="2.4" height="15.0" fill="rgb(227,81,11)" rx="2" ry="2" />
<text  x="1159.49" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.20%)</title><rect x="1046.4" y="421" width="2.4" height="15.0" fill="rgb(236,166,42)" rx="2" ry="2" />
<text  x="1049.39" y="431.5" ></text>
</g>
<g >
<title>_perf_ioctl (77 samples, 15.62%)</title><rect x="850.1" y="293" width="184.3" height="15.0" fill="rgb(222,69,28)" rx="2" ry="2" />
<text  x="853.12" y="303.5" >_perf_ioctl</text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.20%)</title><rect x="1036.8" y="229" width="2.4" height="15.0" fill="rgb(219,128,17)" rx="2" ry="2" />
<text  x="1039.82" y="239.5" ></text>
</g>
<g >
<title>perf_event_mmap (1 samples, 0.20%)</title><rect x="1051.2" y="325" width="2.4" height="15.0" fill="rgb(243,87,22)" rx="2" ry="2" />
<text  x="1054.18" y="335.5" ></text>
</g>
<g >
<title>generic_exec_single (77 samples, 15.62%)</title><rect x="850.1" y="213" width="184.3" height="15.0" fill="rgb(209,164,3)" rx="2" ry="2" />
<text  x="853.12" y="223.5" >generic_exec_single</text>
</g>
<g >
<title>cpuidle_enter_state (43 samples, 8.72%)</title><rect x="1053.6" y="357" width="102.9" height="15.0" fill="rgb(242,119,13)" rx="2" ry="2" />
<text  x="1056.57" y="367.5" >cpuidle_ente..</text>
</g>
<g >
<title>shrink_dentry_list (1 samples, 0.20%)</title><rect x="1041.6" y="181" width="2.4" height="15.0" fill="rgb(243,11,51)" rx="2" ry="2" />
<text  x="1044.60" y="191.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (1 samples, 0.20%)</title><rect x="443.2" y="293" width="2.4" height="15.0" fill="rgb(248,141,43)" rx="2" ry="2" />
<text  x="446.23" y="303.5" ></text>
</g>
<g >
<title>sched_clock_cpu (1 samples, 0.20%)</title><rect x="847.7" y="309" width="2.4" height="15.0" fill="rgb(210,46,19)" rx="2" ry="2" />
<text  x="850.73" y="319.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.20%)</title><rect x="227.8" y="293" width="2.4" height="15.0" fill="rgb(248,117,50)" rx="2" ry="2" />
<text  x="230.81" y="303.5" ></text>
</g>
<g >
<title>ctx_resched (77 samples, 15.62%)</title><rect x="850.1" y="149" width="184.3" height="15.0" fill="rgb(247,132,25)" rx="2" ry="2" />
<text  x="853.12" y="159.5" >ctx_resched</text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.20%)</title><rect x="24.4" y="453" width="2.4" height="15.0" fill="rgb(205,223,6)" rx="2" ry="2" />
<text  x="27.36" y="463.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (1 samples, 0.20%)</title><rect x="1156.5" y="309" width="2.4" height="15.0" fill="rgb(247,42,45)" rx="2" ry="2" />
<text  x="1159.49" y="319.5" ></text>
</g>
<g >
<title>__GI___ioctl (78 samples, 15.82%)</title><rect x="850.1" y="373" width="186.7" height="15.0" fill="rgb(241,78,14)" rx="2" ry="2" />
<text  x="853.12" y="383.5" >__GI___ioctl</text>
</g>
<g >
<title>do_shrink_slab (1 samples, 0.20%)</title><rect x="1039.2" y="245" width="2.4" height="15.0" fill="rgb(225,77,44)" rx="2" ry="2" />
<text  x="1042.21" y="255.5" ></text>
</g>
<g >
<title>main (78 samples, 15.82%)</title><rect x="850.1" y="437" width="186.7" height="15.0" fill="rgb(242,18,12)" rx="2" ry="2" />
<text  x="853.12" y="447.5" >main</text>
</g>
<g >
<title>wake_up_process (1 samples, 0.20%)</title><rect x="1185.2" y="117" width="2.4" height="15.0" fill="rgb(249,3,31)" rx="2" ry="2" />
<text  x="1188.21" y="127.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.20%)</title><rect x="24.4" y="405" width="2.4" height="15.0" fill="rgb(240,78,6)" rx="2" ry="2" />
<text  x="27.36" y="415.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.20%)</title><rect x="1036.8" y="213" width="2.4" height="15.0" fill="rgb(210,165,52)" rx="2" ry="2" />
<text  x="1039.82" y="223.5" ></text>
</g>
<g >
<title>kmem_cache_free (1 samples, 0.20%)</title><rect x="10.0" y="309" width="2.4" height="15.0" fill="rgb(229,196,53)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.20%)</title><rect x="1158.9" y="245" width="2.4" height="15.0" fill="rgb(237,78,24)" rx="2" ry="2" />
<text  x="1161.88" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.20%)</title><rect x="1158.9" y="277" width="2.4" height="15.0" fill="rgb(231,106,20)" rx="2" ry="2" />
<text  x="1161.88" y="287.5" ></text>
</g>
<g >
<title>security_file_permission (10 samples, 2.03%)</title><rect x="524.6" y="341" width="23.9" height="15.0" fill="rgb(250,204,44)" rx="2" ry="2" />
<text  x="527.60" y="351.5" >s..</text>
</g>
<g >
<title>fsverity_cleanup_inode (1 samples, 0.20%)</title><rect x="1044.0" y="133" width="2.4" height="15.0" fill="rgb(227,208,18)" rx="2" ry="2" />
<text  x="1047.00" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.20%)</title><rect x="842.9" y="405" width="2.4" height="15.0" fill="rgb(234,53,50)" rx="2" ry="2" />
<text  x="845.94" y="415.5" ></text>
</g>
<g >
<title>ttwu_do_activate (1 samples, 0.20%)</title><rect x="1185.2" y="85" width="2.4" height="15.0" fill="rgb(209,105,18)" rx="2" ry="2" />
<text  x="1188.21" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title><rect x="1051.2" y="437" width="2.4" height="15.0" fill="rgb(221,125,10)" rx="2" ry="2" />
<text  x="1054.18" y="447.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (1 samples, 0.20%)</title><rect x="156.0" y="357" width="2.4" height="15.0" fill="rgb(236,166,29)" rx="2" ry="2" />
<text  x="159.00" y="367.5" ></text>
</g>
<g >
<title>kthread (5 samples, 1.01%)</title><rect x="12.4" y="437" width="12.0" height="15.0" fill="rgb(231,31,17)" rx="2" ry="2" />
<text  x="15.39" y="447.5" ></text>
</g>
<g >
<title>rest_init (12 samples, 2.43%)</title><rect x="1158.9" y="373" width="28.7" height="15.0" fill="rgb(224,76,20)" rx="2" ry="2" />
<text  x="1161.88" y="383.5" >re..</text>
</g>
<g >
<title>__x64_sys_pread64 (173 samples, 35.09%)</title><rect x="134.5" y="389" width="414.0" height="15.0" fill="rgb(247,68,11)" rx="2" ry="2" />
<text  x="137.46" y="399.5" >__x64_sys_pread64</text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (1 samples, 0.20%)</title><rect x="1187.6" y="389" width="2.4" height="15.0" fill="rgb(205,113,2)" rx="2" ry="2" />
<text  x="1190.61" y="399.5" ></text>
</g>
<g >
<title>__libc_start_main (78 samples, 15.82%)</title><rect x="850.1" y="453" width="186.7" height="15.0" fill="rgb(222,89,46)" rx="2" ry="2" />
<text  x="853.12" y="463.5" >__libc_start_main</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title><rect x="1046.4" y="437" width="2.4" height="15.0" fill="rgb(222,173,24)" rx="2" ry="2" />
<text  x="1049.39" y="447.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.20%)</title><rect x="1051.2" y="421" width="2.4" height="15.0" fill="rgb(240,64,24)" rx="2" ry="2" />
<text  x="1054.18" y="431.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.20%)</title><rect x="842.9" y="389" width="2.4" height="15.0" fill="rgb(232,1,36)" rx="2" ry="2" />
<text  x="845.94" y="399.5" ></text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.20%)</title><rect x="1036.8" y="341" width="2.4" height="15.0" fill="rgb(214,152,7)" rx="2" ry="2" />
<text  x="1039.82" y="351.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.20%)</title><rect x="845.3" y="341" width="2.4" height="15.0" fill="rgb(237,217,16)" rx="2" ry="2" />
<text  x="848.33" y="351.5" ></text>
</g>
<g >
<title>PageHuge (1 samples, 0.20%)</title><rect x="225.4" y="293" width="2.4" height="15.0" fill="rgb(207,217,17)" rx="2" ry="2" />
<text  x="228.42" y="303.5" ></text>
</g>
<g >
<title>new_sync_write (3 samples, 0.61%)</title><rect x="1039.2" y="357" width="7.2" height="15.0" fill="rgb(222,43,3)" rx="2" ry="2" />
<text  x="1042.21" y="367.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.20%)</title><rect x="10.0" y="453" width="2.4" height="15.0" fill="rgb(209,23,25)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (1 samples, 0.20%)</title><rect x="1187.6" y="405" width="2.4" height="15.0" fill="rgb(236,93,53)" rx="2" ry="2" />
<text  x="1190.61" y="415.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.20%)</title><rect x="24.4" y="421" width="2.4" height="15.0" fill="rgb(215,98,47)" rx="2" ry="2" />
<text  x="27.36" y="431.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.20%)</title><rect x="24.4" y="389" width="2.4" height="15.0" fill="rgb(232,87,18)" rx="2" ry="2" />
<text  x="27.36" y="399.5" ></text>
</g>
<g >
<title>__this_module (1 samples, 0.20%)</title><rect x="1187.6" y="325" width="2.4" height="15.0" fill="rgb(238,175,28)" rx="2" ry="2" />
<text  x="1190.61" y="335.5" ></text>
</g>
<g >
<title>mmput (1 samples, 0.20%)</title><rect x="1036.8" y="277" width="2.4" height="15.0" fill="rgb(230,111,40)" rx="2" ry="2" />
<text  x="1039.82" y="287.5" ></text>
</g>
<g >
<title>migration_cpu_stop (1 samples, 0.20%)</title><rect x="847.7" y="389" width="2.4" height="15.0" fill="rgb(205,184,18)" rx="2" ry="2" />
<text  x="850.73" y="399.5" ></text>
</g>
<g >
<title>drm_gem_get_pages (5 samples, 1.01%)</title><rect x="12.4" y="309" width="12.0" height="15.0" fill="rgb(225,74,30)" rx="2" ry="2" />
<text  x="15.39" y="319.5" ></text>
</g>
<g >
<title>find_busiest_group (1 samples, 0.20%)</title><rect x="1158.9" y="133" width="2.4" height="15.0" fill="rgb(238,119,43)" rx="2" ry="2" />
<text  x="1161.88" y="143.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.20%)</title><rect x="10.0" y="437" width="2.4" height="15.0" fill="rgb(222,88,2)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>current_time (5 samples, 1.01%)</title><rect x="505.5" y="261" width="11.9" height="15.0" fill="rgb(244,103,8)" rx="2" ry="2" />
<text  x="508.46" y="271.5" ></text>
</g>
<g >
<title>evict (1 samples, 0.20%)</title><rect x="1044.0" y="181" width="2.4" height="15.0" fill="rgb(214,22,26)" rx="2" ry="2" />
<text  x="1047.00" y="191.5" ></text>
</g>
<g >
<title>dcache_readdir (1 samples, 0.20%)</title><rect x="1046.4" y="373" width="2.4" height="15.0" fill="rgb(215,206,43)" rx="2" ry="2" />
<text  x="1049.39" y="383.5" ></text>
</g>
<g >
<title>rb_insert_color (1 samples, 0.20%)</title><rect x="1156.5" y="293" width="2.4" height="15.0" fill="rgb(244,122,43)" rx="2" ry="2" />
<text  x="1159.49" y="303.5" ></text>
</g>
<g >
<title>vfs_read (169 samples, 34.28%)</title><rect x="144.0" y="373" width="404.5" height="15.0" fill="rgb(229,166,0)" rx="2" ry="2" />
<text  x="147.04" y="383.5" >vfs_read</text>
</g>
<g >
<title>prune_icache_sb (1 samples, 0.20%)</title><rect x="1044.0" y="197" width="2.4" height="15.0" fill="rgb(237,28,1)" rx="2" ry="2" />
<text  x="1047.00" y="207.5" ></text>
</g>
<g >
<title>shmem_getpage_gfp (5 samples, 1.01%)</title><rect x="12.4" y="277" width="12.0" height="15.0" fill="rgb(254,21,24)" rx="2" ry="2" />
<text  x="15.39" y="287.5" ></text>
</g>
<g >
<title>bprm_execve (1 samples, 0.20%)</title><rect x="1036.8" y="373" width="2.4" height="15.0" fill="rgb(244,5,4)" rx="2" ry="2" />
<text  x="1039.82" y="383.5" ></text>
</g>
<g >
<title>copy_page_to_iter (1 samples, 0.20%)</title><rect x="182.3" y="309" width="2.4" height="15.0" fill="rgb(225,37,52)" rx="2" ry="2" />
<text  x="185.33" y="319.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.20%)</title><rect x="1185.2" y="309" width="2.4" height="15.0" fill="rgb(253,120,36)" rx="2" ry="2" />
<text  x="1188.21" y="319.5" ></text>
</g>
<g >
<title>do_idle (12 samples, 2.43%)</title><rect x="1158.9" y="341" width="28.7" height="15.0" fill="rgb(251,206,48)" rx="2" ry="2" />
<text  x="1161.88" y="351.5" >do..</text>
</g>
<g >
<title>__queue_work (1 samples, 0.20%)</title><rect x="1185.2" y="149" width="2.4" height="15.0" fill="rgb(240,45,44)" rx="2" ry="2" />
<text  x="1188.21" y="159.5" ></text>
</g>
<g >
<title>generic_file_read_iter (143 samples, 29.01%)</title><rect x="175.2" y="325" width="342.2" height="15.0" fill="rgb(244,198,17)" rx="2" ry="2" />
<text  x="178.15" y="335.5" >generic_file_read_iter</text>
</g>
<g >
<title>start_secondary (44 samples, 8.92%)</title><rect x="1053.6" y="437" width="105.3" height="15.0" fill="rgb(218,80,54)" rx="2" ry="2" />
<text  x="1056.57" y="447.5" >start_second..</text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.20%)</title><rect x="36.3" y="421" width="2.4" height="15.0" fill="rgb(254,106,45)" rx="2" ry="2" />
<text  x="39.33" y="431.5" ></text>
</g>
<g >
<title>do_mmap (1 samples, 0.20%)</title><rect x="1051.2" y="357" width="2.4" height="15.0" fill="rgb(223,55,25)" rx="2" ry="2" />
<text  x="1054.18" y="367.5" ></text>
</g>
<g >
<title>ksys_write (3 samples, 0.61%)</title><rect x="1039.2" y="389" width="7.2" height="15.0" fill="rgb(236,145,26)" rx="2" ry="2" />
<text  x="1042.21" y="399.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (1 samples, 0.20%)</title><rect x="845.3" y="405" width="2.4" height="15.0" fill="rgb(252,29,36)" rx="2" ry="2" />
<text  x="848.33" y="415.5" ></text>
</g>
<g >
<title>drop_slab_node (3 samples, 0.61%)</title><rect x="1039.2" y="277" width="7.2" height="15.0" fill="rgb(229,37,11)" rx="2" ry="2" />
<text  x="1042.21" y="287.5" ></text>
</g>
<g >
<title>slab_free_freelist_hook (1 samples, 0.20%)</title><rect x="10.0" y="293" width="2.4" height="15.0" fill="rgb(253,144,5)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>smp_call_function_single (77 samples, 15.62%)</title><rect x="850.1" y="229" width="184.3" height="15.0" fill="rgb(209,107,4)" rx="2" ry="2" />
<text  x="853.12" y="239.5" >smp_call_function_single</text>
</g>
<g >
<title>irq_work_single (1 samples, 0.20%)</title><rect x="1185.2" y="197" width="2.4" height="15.0" fill="rgb(249,81,6)" rx="2" ry="2" />
<text  x="1188.21" y="207.5" ></text>
</g>
<g >
<title>do_reqs_basic (4 samples, 0.81%)</title><rect x="831.0" y="437" width="9.5" height="15.0" fill="rgb(250,18,2)" rx="2" ry="2" />
<text  x="833.97" y="447.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.20%)</title><rect x="1185.2" y="101" width="2.4" height="15.0" fill="rgb(249,130,4)" rx="2" ry="2" />
<text  x="1188.21" y="111.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.20%)</title><rect x="24.4" y="437" width="2.4" height="15.0" fill="rgb(232,105,23)" rx="2" ry="2" />
<text  x="27.36" y="447.5" ></text>
</g>
<g >
<title>do_idle (44 samples, 8.92%)</title><rect x="1053.6" y="405" width="105.3" height="15.0" fill="rgb(251,64,35)" rx="2" ry="2" />
<text  x="1056.57" y="415.5" >do_idle</text>
</g>
<g >
<title>atime_needs_update (7 samples, 1.42%)</title><rect x="500.7" y="277" width="16.7" height="15.0" fill="rgb(238,196,29)" rx="2" ry="2" />
<text  x="503.67" y="287.5" ></text>
</g>
<g >
<title>cpu_startup_entry (44 samples, 8.92%)</title><rect x="1053.6" y="421" width="105.3" height="15.0" fill="rgb(216,185,49)" rx="2" ry="2" />
<text  x="1056.57" y="431.5" >cpu_startup_..</text>
</g>
<g >
<title>hrtimer_start_range_ns (1 samples, 0.20%)</title><rect x="1156.5" y="341" width="2.4" height="15.0" fill="rgb(248,170,16)" rx="2" ry="2" />
<text  x="1159.49" y="351.5" ></text>
</g>
<g >
<title>find_lock_entry (3 samples, 0.61%)</title><rect x="17.2" y="261" width="7.2" height="15.0" fill="rgb(213,199,19)" rx="2" ry="2" />
<text  x="20.18" y="271.5" ></text>
</g>
<g >
<title>secondary_startup_64_no_verify (56 samples, 11.36%)</title><rect x="1053.6" y="453" width="134.0" height="15.0" fill="rgb(220,81,9)" rx="2" ry="2" />
<text  x="1056.57" y="463.5" >secondary_startu..</text>
</g>
<g >
<title>__GI___execve (1 samples, 0.20%)</title><rect x="1036.8" y="453" width="2.4" height="15.0" fill="rgb(246,193,41)" rx="2" ry="2" />
<text  x="1039.82" y="463.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.20%)</title><rect x="847.7" y="421" width="2.4" height="15.0" fill="rgb(229,161,36)" rx="2" ry="2" />
<text  x="850.73" y="431.5" ></text>
</g>
<g >
<title>shrink_slab_memcg (2 samples, 0.41%)</title><rect x="1041.6" y="245" width="4.8" height="15.0" fill="rgb(247,89,7)" rx="2" ry="2" />
<text  x="1044.60" y="255.5" ></text>
</g>
<g >
<title>menu_select (1 samples, 0.20%)</title><rect x="1182.8" y="293" width="2.4" height="15.0" fill="rgb(206,75,48)" rx="2" ry="2" />
<text  x="1185.82" y="303.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.20%)</title><rect x="1034.4" y="325" width="2.4" height="15.0" fill="rgb(228,113,23)" rx="2" ry="2" />
<text  x="1037.42" y="335.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.20%)</title><rect x="1185.2" y="69" width="2.4" height="15.0" fill="rgb(238,156,30)" rx="2" ry="2" />
<text  x="1188.21" y="79.5" ></text>
</g>
<g >
<title>_perf_event_enable (77 samples, 15.62%)</title><rect x="850.1" y="261" width="184.3" height="15.0" fill="rgb(221,181,49)" rx="2" ry="2" />
<text  x="853.12" y="271.5" >_perf_event_enable</text>
</g>
<g >
<title>shrink_slab (3 samples, 0.61%)</title><rect x="1039.2" y="261" width="7.2" height="15.0" fill="rgb(226,229,30)" rx="2" ry="2" />
<text  x="1042.21" y="271.5" ></text>
</g>
<g >
<title>move_queued_task (1 samples, 0.20%)</title><rect x="847.7" y="373" width="2.4" height="15.0" fill="rgb(211,143,42)" rx="2" ry="2" />
<text  x="850.73" y="383.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (1 samples, 0.20%)</title><rect x="1185.2" y="245" width="2.4" height="15.0" fill="rgb(218,121,7)" rx="2" ry="2" />
<text  x="1188.21" y="255.5" ></text>
</g>
<g >
<title>xas_load (8 samples, 1.62%)</title><rect x="474.3" y="261" width="19.2" height="15.0" fill="rgb(238,29,32)" rx="2" ry="2" />
<text  x="477.34" y="271.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.20%)</title><rect x="845.3" y="325" width="2.4" height="15.0" fill="rgb(239,23,31)" rx="2" ry="2" />
<text  x="848.33" y="335.5" ></text>
</g>
<g >
<title>cmd_record (78 samples, 15.82%)</title><rect x="850.1" y="405" width="186.7" height="15.0" fill="rgb(205,63,30)" rx="2" ry="2" />
<text  x="853.12" y="415.5" >cmd_record</text>
</g>
<g >
<title>proc_sys_call_handler (3 samples, 0.61%)</title><rect x="1039.2" y="325" width="7.2" height="15.0" fill="rgb(213,126,16)" rx="2" ry="2" />
<text  x="1042.21" y="335.5" ></text>
</g>
<g >
<title>irq_work_run (1 samples, 0.20%)</title><rect x="1185.2" y="229" width="2.4" height="15.0" fill="rgb(215,0,45)" rx="2" ry="2" />
<text  x="1188.21" y="239.5" ></text>
</g>
<g >
<title>drop_caches_sysctl_handler (3 samples, 0.61%)</title><rect x="1039.2" y="309" width="7.2" height="15.0" fill="rgb(238,65,47)" rx="2" ry="2" />
<text  x="1042.21" y="319.5" ></text>
</g>
<g >
<title>run_ksoftirqd (1 samples, 0.20%)</title><rect x="10.0" y="405" width="2.4" height="15.0" fill="rgb(240,197,44)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (1 samples, 0.20%)</title><rect x="1051.2" y="389" width="2.4" height="15.0" fill="rgb(237,51,31)" rx="2" ry="2" />
<text  x="1054.18" y="399.5" ></text>
</g>
<g >
<title>dbs_irq_work (1 samples, 0.20%)</title><rect x="1185.2" y="181" width="2.4" height="15.0" fill="rgb(245,216,10)" rx="2" ry="2" />
<text  x="1188.21" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_write (3 samples, 0.61%)</title><rect x="1039.2" y="405" width="7.2" height="15.0" fill="rgb(242,64,36)" rx="2" ry="2" />
<text  x="1042.21" y="415.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (81 samples, 16.43%)</title><rect x="548.5" y="389" width="193.9" height="15.0" fill="rgb(210,54,51)" rx="2" ry="2" />
<text  x="551.54" y="399.5" >syscall_exit_to_user_mode</text>
</g>
<g >
<title>mmap64 (1 samples, 0.20%)</title><rect x="1051.2" y="453" width="2.4" height="15.0" fill="rgb(246,71,1)" rx="2" ry="2" />
<text  x="1054.18" y="463.5" ></text>
</g>
<g >
<title>event_function_call (77 samples, 15.62%)</title><rect x="850.1" y="245" width="184.3" height="15.0" fill="rgb(232,116,52)" rx="2" ry="2" />
<text  x="853.12" y="255.5" >event_function_call</text>
</g>
<g >
<title>tick_nohz_stop_tick (1 samples, 0.20%)</title><rect x="1156.5" y="357" width="2.4" height="15.0" fill="rgb(241,168,43)" rx="2" ry="2" />
<text  x="1159.49" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (78 samples, 15.82%)</title><rect x="850.1" y="357" width="186.7" height="15.0" fill="rgb(226,31,40)" rx="2" ry="2" />
<text  x="853.12" y="367.5" >entry_SYSCALL_64_after_h..</text>
</g>
<g >
<title>dequeue_task (1 samples, 0.20%)</title><rect x="847.7" y="357" width="2.4" height="15.0" fill="rgb(224,121,27)" rx="2" ry="2" />
<text  x="850.73" y="367.5" ></text>
</g>
<g >
<title>slothd-842/842 (1 samples, 0.20%)</title><rect x="1046.4" y="469" width="2.4" height="15.0" fill="rgb(248,76,4)" rx="2" ry="2" />
<text  x="1049.39" y="479.5" ></text>
</g>
<g >
<title>sysvec_irq_work (1 samples, 0.20%)</title><rect x="1185.2" y="277" width="2.4" height="15.0" fill="rgb(244,60,50)" rx="2" ry="2" />
<text  x="1188.21" y="287.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (9 samples, 1.83%)</title><rect x="1161.3" y="277" width="21.5" height="15.0" fill="rgb(207,158,25)" rx="2" ry="2" />
<text  x="1164.28" y="287.5" >m..</text>
</g>
<g >
<title>_cond_resched (1 samples, 0.20%)</title><rect x="179.9" y="309" width="2.4" height="15.0" fill="rgb(217,149,46)" rx="2" ry="2" />
<text  x="182.94" y="319.5" ></text>
</g>
<g >
<title>shmem_read_mapping_page_gfp (5 samples, 1.01%)</title><rect x="12.4" y="293" width="12.0" height="15.0" fill="rgb(250,222,51)" rx="2" ry="2" />
<text  x="15.39" y="303.5" ></text>
</g>
<g >
<title>shrink_lock_dentry.part.0 (1 samples, 0.20%)</title><rect x="1041.6" y="165" width="2.4" height="15.0" fill="rgb(243,179,47)" rx="2" ry="2" />
<text  x="1044.60" y="175.5" ></text>
</g>
<g >
<title>drm_fb_helper_dirty_work (5 samples, 1.01%)</title><rect x="12.4" y="389" width="12.0" height="15.0" fill="rgb(212,19,44)" rx="2" ry="2" />
<text  x="15.39" y="399.5" ></text>
</g>
<g >
<title>swapper-?/0 (56 samples, 11.36%)</title><rect x="1053.6" y="469" width="134.0" height="15.0" fill="rgb(214,96,12)" rx="2" ry="2" />
<text  x="1056.57" y="479.5" >swapper-?/0</text>
</g>
<g >
<title>kthread (1 samples, 0.20%)</title><rect x="845.3" y="437" width="2.4" height="15.0" fill="rgb(233,23,53)" rx="2" ry="2" />
<text  x="848.33" y="447.5" ></text>
</g>
<g >
<title>vfs_read (1 samples, 0.20%)</title><rect x="742.4" y="389" width="2.4" height="15.0" fill="rgb(232,61,36)" rx="2" ry="2" />
<text  x="745.41" y="399.5" ></text>
</g>
<g >
<title>do_syscall_64 (3 samples, 0.61%)</title><rect x="1039.2" y="421" width="7.2" height="15.0" fill="rgb(227,121,10)" rx="2" ry="2" />
<text  x="1042.21" y="431.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (43 samples, 8.72%)</title><rect x="1053.6" y="341" width="102.9" height="15.0" fill="rgb(208,31,21)" rx="2" ry="2" />
<text  x="1056.57" y="351.5" >mwait_idle_w..</text>
</g>
<g >
<title>run_builtin (78 samples, 15.82%)</title><rect x="850.1" y="421" width="186.7" height="15.0" fill="rgb(227,87,53)" rx="2" ry="2" />
<text  x="853.12" y="431.5" >run_builtin</text>
</g>
<g >
<title>kworker/u32:0-m-128704/128704 (1 samples, 0.20%)</title><rect x="24.4" y="469" width="2.4" height="15.0" fill="rgb(236,147,13)" rx="2" ry="2" />
<text  x="27.36" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (77 samples, 15.62%)</title><rect x="850.1" y="325" width="184.3" height="15.0" fill="rgb(237,218,5)" rx="2" ry="2" />
<text  x="853.12" y="335.5" >__x64_sys_ioctl</text>
</g>
<g >
<title>rcu_core (1 samples, 0.20%)</title><rect x="10.0" y="357" width="2.4" height="15.0" fill="rgb(207,229,4)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.20%)</title><rect x="1185.2" y="261" width="2.4" height="15.0" fill="rgb(205,64,14)" rx="2" ry="2" />
<text  x="1188.21" y="271.5" ></text>
</g>
<g >
<title>migration/9-67/67 (1 samples, 0.20%)</title><rect x="847.7" y="469" width="2.4" height="15.0" fill="rgb(230,195,21)" rx="2" ry="2" />
<text  x="850.73" y="479.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.20%)</title><rect x="10.0" y="421" width="2.4" height="15.0" fill="rgb(252,96,0)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>seccomp_run_filters (1 samples, 0.20%)</title><rect x="1187.6" y="341" width="2.4" height="15.0" fill="rgb(208,0,19)" rx="2" ry="2" />
<text  x="1190.61" y="351.5" ></text>
</g>
<g >
<title>do_shrink_slab (2 samples, 0.41%)</title><rect x="1041.6" y="229" width="4.8" height="15.0" fill="rgb(228,95,0)" rx="2" ry="2" />
<text  x="1044.60" y="239.5" ></text>
</g>
<g >
<title>enqueue_task (1 samples, 0.20%)</title><rect x="845.3" y="357" width="2.4" height="15.0" fill="rgb(249,153,22)" rx="2" ry="2" />
<text  x="848.33" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_safe_stack (7 samples, 1.42%)</title><rect x="744.8" y="421" width="16.8" height="15.0" fill="rgb(249,48,21)" rx="2" ry="2" />
<text  x="747.81" y="431.5" ></text>
</g>
<g >
<title>arch_call_rest_init (12 samples, 2.43%)</title><rect x="1158.9" y="389" width="28.7" height="15.0" fill="rgb(235,186,9)" rx="2" ry="2" />
<text  x="1161.88" y="399.5" >ar..</text>
</g>
<g >
<title>do_softirq_own_stack (1 samples, 0.20%)</title><rect x="1158.9" y="229" width="2.4" height="15.0" fill="rgb(241,46,1)" rx="2" ry="2" />
<text  x="1161.88" y="239.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.20%)</title><rect x="1158.9" y="197" width="2.4" height="15.0" fill="rgb(236,100,54)" rx="2" ry="2" />
<text  x="1161.88" y="207.5" ></text>
</g>
<g >
<title>clear_buddies (1 samples, 0.20%)</title><rect x="24.4" y="357" width="2.4" height="15.0" fill="rgb(236,217,44)" rx="2" ry="2" />
<text  x="27.36" y="367.5" ></text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 1.01%)</title><rect x="1022.5" y="133" width="11.9" height="15.0" fill="rgb(245,45,11)" rx="2" ry="2" />
<text  x="1025.45" y="143.5" ></text>
</g>
<g >
<title>prune_dcache_sb (1 samples, 0.20%)</title><rect x="1041.6" y="197" width="2.4" height="15.0" fill="rgb(207,186,17)" rx="2" ry="2" />
<text  x="1044.60" y="207.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (2 samples, 0.41%)</title><rect x="512.6" y="245" width="4.8" height="15.0" fill="rgb(233,222,9)" rx="2" ry="2" />
<text  x="515.64" y="255.5" ></text>
</g>
<g >
<title>__GI___libc_sigaction (1 samples, 0.20%)</title><rect x="842.9" y="437" width="2.4" height="15.0" fill="rgb(207,101,41)" rx="2" ry="2" />
<text  x="845.94" y="447.5" ></text>
</g>
<g >
<title>insert_work (1 samples, 0.20%)</title><rect x="1185.2" y="133" width="2.4" height="15.0" fill="rgb(242,9,24)" rx="2" ry="2" />
<text  x="1188.21" y="143.5" ></text>
</g>
<g >
<title>ext4_evict_inode (1 samples, 0.20%)</title><rect x="1044.0" y="165" width="2.4" height="15.0" fill="rgb(225,15,52)" rx="2" ry="2" />
<text  x="1047.00" y="175.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.20%)</title><rect x="1036.8" y="261" width="2.4" height="15.0" fill="rgb(229,89,7)" rx="2" ry="2" />
<text  x="1039.82" y="271.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.20%)</title><rect x="840.5" y="437" width="2.4" height="15.0" fill="rgb(247,222,10)" rx="2" ry="2" />
<text  x="843.55" y="447.5" ></text>
</g>
<g >
<title>enqueue_entity (1 samples, 0.20%)</title><rect x="1185.2" y="37" width="2.4" height="15.0" fill="rgb(220,211,31)" rx="2" ry="2" />
<text  x="1188.21" y="47.5" ></text>
</g>
<g >
<title>__secure_computing (1 samples, 0.20%)</title><rect x="1187.6" y="373" width="2.4" height="15.0" fill="rgb(218,92,40)" rx="2" ry="2" />
<text  x="1190.61" y="383.5" ></text>
</g>
<g >
<title>rw_verify_area (13 samples, 2.64%)</title><rect x="517.4" y="357" width="31.1" height="15.0" fill="rgb(254,46,23)" rx="2" ry="2" />
<text  x="520.42" y="367.5" >rw..</text>
</g>
<g >
<title>__d_free (1 samples, 0.20%)</title><rect x="10.0" y="325" width="2.4" height="15.0" fill="rgb(240,219,34)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>queue_work_on (1 samples, 0.20%)</title><rect x="1185.2" y="165" width="2.4" height="15.0" fill="rgb(240,196,51)" rx="2" ry="2" />
<text  x="1188.21" y="175.5" ></text>
</g>
<g >
<title>[unknown] (340 samples, 68.97%)</title><rect x="26.8" y="453" width="813.7" height="15.0" fill="rgb(223,39,38)" rx="2" ry="2" />
<text  x="29.75" y="463.5" >[unknown]</text>
</g>
<g >
<title>cpuidle_idle_call (44 samples, 8.92%)</title><rect x="1053.6" y="389" width="105.3" height="15.0" fill="rgb(205,181,53)" rx="2" ry="2" />
<text  x="1056.57" y="399.5" >cpuidle_idle..</text>
</g>
<g >
<title>perf-128885/128885 (78 samples, 15.82%)</title><rect x="850.1" y="469" width="186.7" height="15.0" fill="rgb(229,46,51)" rx="2" ry="2" />
<text  x="853.12" y="479.5" >perf-128885/128885</text>
</g>
<g >
<title>ext4_file_read_iter (146 samples, 29.61%)</title><rect x="168.0" y="341" width="349.4" height="15.0" fill="rgb(205,69,36)" rx="2" ry="2" />
<text  x="170.97" y="351.5" >ext4_file_read_iter</text>
</g>
<g >
<title>vm_mmap_pgoff (1 samples, 0.20%)</title><rect x="1051.2" y="373" width="2.4" height="15.0" fill="rgb(240,21,11)" rx="2" ry="2" />
<text  x="1054.18" y="383.5" ></text>
</g>
<g >
<title>systemd-journal-3059/3059 (1 samples, 0.20%)</title><rect x="1187.6" y="469" width="2.4" height="15.0" fill="rgb(230,178,50)" rx="2" ry="2" />
<text  x="1190.61" y="479.5" ></text>
</g>
<g >
<title>begin_new_exec (1 samples, 0.20%)</title><rect x="1036.8" y="309" width="2.4" height="15.0" fill="rgb(252,210,52)" rx="2" ry="2" />
<text  x="1039.82" y="319.5" ></text>
</g>
<g >
<title>__fsnotify_parent (3 samples, 0.61%)</title><rect x="534.2" y="325" width="7.2" height="15.0" fill="rgb(212,4,30)" rx="2" ry="2" />
<text  x="537.18" y="335.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.20%)</title><rect x="1036.8" y="165" width="2.4" height="15.0" fill="rgb(218,6,23)" rx="2" ry="2" />
<text  x="1039.82" y="175.5" ></text>
</g>
<g >
<title>ext4_clear_inode (1 samples, 0.20%)</title><rect x="1044.0" y="149" width="2.4" height="15.0" fill="rgb(214,192,41)" rx="2" ry="2" />
<text  x="1047.00" y="159.5" ></text>
</g>
<g >
<title>sh-128892/128892 (3 samples, 0.61%)</title><rect x="1039.2" y="469" width="7.2" height="15.0" fill="rgb(227,203,25)" rx="2" ry="2" />
<text  x="1042.21" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (259 samples, 52.54%)</title><rect x="124.9" y="405" width="619.9" height="15.0" fill="rgb(221,216,36)" rx="2" ry="2" />
<text  x="127.89" y="415.5" >do_syscall_64</text>
</g>
<g >
<title>d_path (1 samples, 0.20%)</title><rect x="1051.2" y="293" width="2.4" height="15.0" fill="rgb(251,159,52)" rx="2" ry="2" />
<text  x="1054.18" y="303.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.20%)</title><rect x="847.7" y="437" width="2.4" height="15.0" fill="rgb(243,176,40)" rx="2" ry="2" />
<text  x="850.73" y="447.5" ></text>
</g>
<g >
<title>__hrtimer_start_range_ns (1 samples, 0.20%)</title><rect x="1156.5" y="325" width="2.4" height="15.0" fill="rgb(247,122,42)" rx="2" ry="2" />
<text  x="1159.49" y="335.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.20%)</title><rect x="1036.8" y="181" width="2.4" height="15.0" fill="rgb(251,225,21)" rx="2" ry="2" />
<text  x="1039.82" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_irq_work (1 samples, 0.20%)</title><rect x="1185.2" y="293" width="2.4" height="15.0" fill="rgb(206,172,11)" rx="2" ry="2" />
<text  x="1188.21" y="303.5" ></text>
</g>
<g >
<title>process_one_work (5 samples, 1.01%)</title><rect x="12.4" y="405" width="12.0" height="15.0" fill="rgb(253,18,49)" rx="2" ry="2" />
<text  x="15.39" y="415.5" ></text>
</g>
<g >
<title>load_balance (1 samples, 0.20%)</title><rect x="1158.9" y="149" width="2.4" height="15.0" fill="rgb(230,142,15)" rx="2" ry="2" />
<text  x="1161.88" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (78 samples, 15.82%)</title><rect x="850.1" y="341" width="186.7" height="15.0" fill="rgb(251,221,5)" rx="2" ry="2" />
<text  x="853.12" y="351.5" >do_syscall_64</text>
</g>
<g >
<title>get_typical_interval (1 samples, 0.20%)</title><rect x="1182.8" y="277" width="2.4" height="15.0" fill="rgb(226,88,37)" rx="2" ry="2" />
<text  x="1185.82" y="287.5" ></text>
</g>
<g >
<title>apparmor_file_permission (3 samples, 0.61%)</title><rect x="541.4" y="325" width="7.1" height="15.0" fill="rgb(205,55,43)" rx="2" ry="2" />
<text  x="544.36" y="335.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.20%)</title><rect x="1158.9" y="213" width="2.4" height="15.0" fill="rgb(243,203,25)" rx="2" ry="2" />
<text  x="1161.88" y="223.5" ></text>
</g>
<g >
<title>copy_page_to_iter (88 samples, 17.85%)</title><rect x="232.6" y="293" width="210.6" height="15.0" fill="rgb(246,210,43)" rx="2" ry="2" />
<text  x="235.60" y="303.5" >copy_page_to_iter</text>
</g>
<g >
<title>_start (1 samples, 0.20%)</title><rect x="1048.8" y="453" width="2.4" height="15.0" fill="rgb(243,29,38)" rx="2" ry="2" />
<text  x="1051.78" y="463.5" ></text>
</g>
<g >
<title>__x86_retpoline_rax (1 samples, 0.20%)</title><rect x="522.2" y="341" width="2.4" height="15.0" fill="rgb(253,105,42)" rx="2" ry="2" />
<text  x="525.21" y="351.5" ></text>
</g>
<g >
<title>drm_gem_shmem_get_pages (5 samples, 1.01%)</title><rect x="12.4" y="325" width="12.0" height="15.0" fill="rgb(246,66,0)" rx="2" ry="2" />
<text  x="15.39" y="335.5" ></text>
</g>
<g >
<title>start_kernel (12 samples, 2.43%)</title><rect x="1158.9" y="405" width="28.7" height="15.0" fill="rgb(244,153,29)" rx="2" ry="2" />
<text  x="1161.88" y="415.5" >st..</text>
</g>
<g >
<title>drop_slab (3 samples, 0.61%)</title><rect x="1039.2" y="293" width="7.2" height="15.0" fill="rgb(214,83,6)" rx="2" ry="2" />
<text  x="1042.21" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_getdents64 (1 samples, 0.20%)</title><rect x="1046.4" y="405" width="2.4" height="15.0" fill="rgb(220,120,27)" rx="2" ry="2" />
<text  x="1049.39" y="415.5" ></text>
</g>
<g >
<title>run_rebalance_domains (1 samples, 0.20%)</title><rect x="1158.9" y="181" width="2.4" height="15.0" fill="rgb(241,113,10)" rx="2" ry="2" />
<text  x="1161.88" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (1 samples, 0.20%)</title><rect x="1041.6" y="149" width="2.4" height="15.0" fill="rgb(231,200,27)" rx="2" ry="2" />
<text  x="1044.60" y="159.5" ></text>
</g>
<g >
<title>irq_work_run_list (1 samples, 0.20%)</title><rect x="1185.2" y="213" width="2.4" height="15.0" fill="rgb(247,79,35)" rx="2" ry="2" />
<text  x="1188.21" y="223.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (11 samples, 2.23%)</title><rect x="1158.9" y="325" width="26.3" height="15.0" fill="rgb(235,114,21)" rx="2" ry="2" />
<text  x="1161.88" y="335.5" >c..</text>
</g>
<g >
<title>__x64_sys_mmap (1 samples, 0.20%)</title><rect x="1051.2" y="405" width="2.4" height="15.0" fill="rgb(238,148,24)" rx="2" ry="2" />
<text  x="1054.18" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title><rect x="1036.8" y="437" width="2.4" height="15.0" fill="rgb(237,53,39)" rx="2" ry="2" />
<text  x="1039.82" y="447.5" ></text>
</g>
<g >
<title>cpuidle_enter (43 samples, 8.72%)</title><rect x="1053.6" y="373" width="102.9" height="15.0" fill="rgb(225,64,40)" rx="2" ry="2" />
<text  x="1056.57" y="383.5" >cpuidle_enter</text>
</g>
<g >
<title>rcu_do_batch (1 samples, 0.20%)</title><rect x="10.0" y="341" width="2.4" height="15.0" fill="rgb(251,84,33)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.20%)</title><rect x="29.1" y="437" width="2.4" height="15.0" fill="rgb(249,82,50)" rx="2" ry="2" />
<text  x="32.15" y="447.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.20%)</title><rect x="1036.8" y="197" width="2.4" height="15.0" fill="rgb(234,171,50)" rx="2" ry="2" />
<text  x="1039.82" y="207.5" ></text>
</g>
<g >
<title>touch_atime (8 samples, 1.62%)</title><rect x="498.3" y="293" width="19.1" height="15.0" fill="rgb(230,86,0)" rx="2" ry="2" />
<text  x="501.28" y="303.5" ></text>
</g>
<g >
<title>xas_start (2 samples, 0.41%)</title><rect x="493.5" y="261" width="4.8" height="15.0" fill="rgb(243,117,18)" rx="2" ry="2" />
<text  x="496.49" y="271.5" ></text>
</g>
<g >
<title>evlist__enable (78 samples, 15.82%)</title><rect x="850.1" y="389" width="186.7" height="15.0" fill="rgb(213,189,26)" rx="2" ry="2" />
<text  x="853.12" y="399.5" >evlist__enable</text>
</g>
<g >
<title>microbench-128888/128888 (1 samples, 0.20%)</title><rect x="842.9" y="469" width="2.4" height="15.0" fill="rgb(248,192,27)" rx="2" ry="2" />
<text  x="845.94" y="479.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.20%)</title><rect x="1036.8" y="325" width="2.4" height="15.0" fill="rgb(228,223,49)" rx="2" ry="2" />
<text  x="1039.82" y="335.5" ></text>
</g>
<g >
<title>copy_user_enhanced_fast_string (77 samples, 15.62%)</title><rect x="256.5" y="261" width="184.3" height="15.0" fill="rgb(238,179,1)" rx="2" ry="2" />
<text  x="259.53" y="271.5" >copy_user_enhanced_fast_..</text>
</g>
<g >
<title>psi_task_change (1 samples, 0.20%)</title><rect x="847.7" y="341" width="2.4" height="15.0" fill="rgb(243,96,21)" rx="2" ry="2" />
<text  x="850.73" y="351.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (1 samples, 0.20%)</title><rect x="847.7" y="405" width="2.4" height="15.0" fill="rgb(221,214,43)" rx="2" ry="2" />
<text  x="850.73" y="415.5" ></text>
</g>
<g >
<title>scan_positives (1 samples, 0.20%)</title><rect x="1046.4" y="357" width="2.4" height="15.0" fill="rgb(233,199,20)" rx="2" ry="2" />
<text  x="1049.39" y="367.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (29 samples, 5.88%)</title><rect x="761.6" y="421" width="69.4" height="15.0" fill="rgb(244,16,10)" rx="2" ry="2" />
<text  x="764.56" y="431.5" >syscall..</text>
</g>
<g >
<title>__es_shrink (1 samples, 0.20%)</title><rect x="1039.2" y="213" width="2.4" height="15.0" fill="rgb(212,66,18)" rx="2" ry="2" />
<text  x="1042.21" y="223.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.20%)</title><rect x="1036.8" y="245" width="2.4" height="15.0" fill="rgb(229,80,44)" rx="2" ry="2" />
<text  x="1039.82" y="255.5" ></text>
</g>
<g >
<title>x86_64_start_reservations (12 samples, 2.43%)</title><rect x="1158.9" y="421" width="28.7" height="15.0" fill="rgb(216,96,36)" rx="2" ry="2" />
<text  x="1161.88" y="431.5" >x8..</text>
</g>
<g >
<title>exec_mmap (1 samples, 0.20%)</title><rect x="1036.8" y="293" width="2.4" height="15.0" fill="rgb(210,115,41)" rx="2" ry="2" />
<text  x="1039.82" y="303.5" ></text>
</g>
<g >
<title>__close (1 samples, 0.20%)</title><rect x="1187.6" y="453" width="2.4" height="15.0" fill="rgb(220,185,3)" rx="2" ry="2" />
<text  x="1190.61" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.20%)</title><rect x="1036.8" y="421" width="2.4" height="15.0" fill="rgb(250,144,50)" rx="2" ry="2" />
<text  x="1039.82" y="431.5" ></text>
</g>
<g >
<title>cpuidle_enter (10 samples, 2.03%)</title><rect x="1158.9" y="309" width="23.9" height="15.0" fill="rgb(214,157,35)" rx="2" ry="2" />
<text  x="1161.88" y="319.5" >c..</text>
</g>
<g >
<title>__clone (1 samples, 0.20%)</title><rect x="842.9" y="453" width="2.4" height="15.0" fill="rgb(205,106,8)" rx="2" ry="2" />
<text  x="845.94" y="463.5" ></text>
</g>
<g >
<title>migration_cpu_stop (1 samples, 0.20%)</title><rect x="845.3" y="389" width="2.4" height="15.0" fill="rgb(231,32,48)" rx="2" ry="2" />
<text  x="848.33" y="399.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (1 samples, 0.20%)</title><rect x="1158.9" y="117" width="2.4" height="15.0" fill="rgb(209,11,35)" rx="2" ry="2" />
<text  x="1161.88" y="127.5" ></text>
</g>
<g >
<title>worker_thread (5 samples, 1.01%)</title><rect x="12.4" y="421" width="12.0" height="15.0" fill="rgb(207,167,9)" rx="2" ry="2" />
<text  x="15.39" y="431.5" ></text>
</g>
<g >
<title>drm_gem_shmem_vmap (5 samples, 1.01%)</title><rect x="12.4" y="341" width="12.0" height="15.0" fill="rgb(213,10,48)" rx="2" ry="2" />
<text  x="15.39" y="351.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.20%)</title><rect x="1185.2" y="325" width="2.4" height="15.0" fill="rgb(252,7,31)" rx="2" ry="2" />
<text  x="1188.21" y="335.5" ></text>
</g>
<g >
<title>event_function (77 samples, 15.62%)</title><rect x="850.1" y="181" width="184.3" height="15.0" fill="rgb(229,38,37)" rx="2" ry="2" />
<text  x="853.12" y="191.5" >event_function</text>
</g>
<g >
<title>__GI___getdents64 (1 samples, 0.20%)</title><rect x="1046.4" y="453" width="2.4" height="15.0" fill="rgb(223,6,20)" rx="2" ry="2" />
<text  x="1049.39" y="463.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.20%)</title><rect x="1158.9" y="261" width="2.4" height="15.0" fill="rgb(217,32,34)" rx="2" ry="2" />
<text  x="1161.88" y="271.5" ></text>
</g>
<g >
<title>mmap_region (1 samples, 0.20%)</title><rect x="1051.2" y="341" width="2.4" height="15.0" fill="rgb(233,161,3)" rx="2" ry="2" />
<text  x="1054.18" y="351.5" ></text>
</g>
<g >
<title>__GI___libc_write (3 samples, 0.61%)</title><rect x="1039.2" y="453" width="7.2" height="15.0" fill="rgb(252,43,41)" rx="2" ry="2" />
<text  x="1042.21" y="463.5" ></text>
</g>
<g >
<title>[microbench] (1 samples, 0.20%)</title><rect x="26.8" y="437" width="2.3" height="15.0" fill="rgb(215,157,14)" rx="2" ry="2" />
<text  x="29.75" y="447.5" ></text>
</g>
<g >
<title>vfs_write (3 samples, 0.61%)</title><rect x="1039.2" y="373" width="7.2" height="15.0" fill="rgb(235,48,1)" rx="2" ry="2" />
<text  x="1042.21" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.20%)</title><rect x="842.9" y="421" width="2.4" height="15.0" fill="rgb(236,98,9)" rx="2" ry="2" />
<text  x="845.94" y="431.5" ></text>
</g>
<g >
<title>proc_sys_write (3 samples, 0.61%)</title><rect x="1039.2" y="341" width="7.2" height="15.0" fill="rgb(228,89,29)" rx="2" ry="2" />
<text  x="1042.21" y="351.5" ></text>
</g>
<g >
<title>pagecache_get_page (22 samples, 4.46%)</title><rect x="445.6" y="293" width="52.7" height="15.0" fill="rgb(205,193,8)" rx="2" ry="2" />
<text  x="448.62" y="303.5" >pagec..</text>
</g>
<g >
<title>cpuidle_enter_state (10 samples, 2.03%)</title><rect x="1158.9" y="293" width="23.9" height="15.0" fill="rgb(209,139,7)" rx="2" ry="2" />
<text  x="1161.88" y="303.5" >c..</text>
</g>
<g >
<title>migration/1-19/19 (1 samples, 0.20%)</title><rect x="845.3" y="469" width="2.4" height="15.0" fill="rgb(221,47,20)" rx="2" ry="2" />
<text  x="848.33" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.20%)</title><rect x="1187.6" y="421" width="2.4" height="15.0" fill="rgb(213,176,8)" rx="2" ry="2" />
<text  x="1190.61" y="431.5" ></text>
</g>
<g >
<title>enqueue_task_fair (1 samples, 0.20%)</title><rect x="1185.2" y="53" width="2.4" height="15.0" fill="rgb(205,102,44)" rx="2" ry="2" />
<text  x="1188.21" y="63.5" ></text>
</g>
<g >
<title>super_cache_scan (2 samples, 0.41%)</title><rect x="1041.6" y="213" width="4.8" height="15.0" fill="rgb(242,218,48)" rx="2" ry="2" />
<text  x="1044.60" y="223.5" ></text>
</g>
<g >
<title>perf_event_mmap_event (1 samples, 0.20%)</title><rect x="1051.2" y="309" width="2.4" height="15.0" fill="rgb(218,150,22)" rx="2" ry="2" />
<text  x="1054.18" y="319.5" ></text>
</g>
<g >
<title>perf_event_for_each_child (77 samples, 15.62%)</title><rect x="850.1" y="277" width="184.3" height="15.0" fill="rgb(242,4,29)" rx="2" ry="2" />
<text  x="853.12" y="287.5" >perf_event_for_each_child</text>
</g>
<g >
<title>aa_file_perm (2 samples, 0.41%)</title><rect x="543.8" y="309" width="4.7" height="15.0" fill="rgb(242,220,33)" rx="2" ry="2" />
<text  x="546.75" y="319.5" ></text>
</g>
<g >
<title>copy_fpregs_to_fpstate (1 samples, 0.20%)</title><rect x="1048.8" y="437" width="2.4" height="15.0" fill="rgb(232,91,13)" rx="2" ry="2" />
<text  x="1051.78" y="447.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (268 samples, 54.36%)</title><rect x="103.3" y="421" width="641.5" height="15.0" fill="rgb(206,87,44)" rx="2" ry="2" />
<text  x="106.35" y="431.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>new_sync_read (150 samples, 30.43%)</title><rect x="158.4" y="357" width="359.0" height="15.0" fill="rgb(218,192,29)" rx="2" ry="2" />
<text  x="161.40" y="367.5" >new_sync_read</text>
</g>
<g >
<title>ksoftirqd/5-44/44 (1 samples, 0.20%)</title><rect x="10.0" y="469" width="2.4" height="15.0" fill="rgb(233,199,21)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>psi_group_change (1 samples, 0.20%)</title><rect x="847.7" y="325" width="2.4" height="15.0" fill="rgb(252,83,48)" rx="2" ry="2" />
<text  x="850.73" y="335.5" ></text>
</g>
<g >
<title>perf_ioctl (77 samples, 15.62%)</title><rect x="850.1" y="309" width="184.3" height="15.0" fill="rgb(211,188,20)" rx="2" ry="2" />
<text  x="853.12" y="319.5" >perf_ioctl</text>
</g>
<g >
<title>sudo-128889/128889 (1 samples, 0.20%)</title><rect x="1048.8" y="469" width="2.4" height="15.0" fill="rgb(215,186,37)" rx="2" ry="2" />
<text  x="1051.78" y="479.5" ></text>
</g>
<g >
<title>drm_client_buffer_vmap (5 samples, 1.01%)</title><rect x="12.4" y="373" width="12.0" height="15.0" fill="rgb(231,120,3)" rx="2" ry="2" />
<text  x="15.39" y="383.5" ></text>
</g>
<g >
<title>perf-128886/128886 (1 samples, 0.20%)</title><rect x="1036.8" y="469" width="2.4" height="15.0" fill="rgb(209,45,6)" rx="2" ry="2" />
<text  x="1039.82" y="479.5" ></text>
</g>
<g >
<title>__x86_retpoline_rax (4 samples, 0.81%)</title><rect x="115.3" y="405" width="9.6" height="15.0" fill="rgb(229,9,16)" rx="2" ry="2" />
<text  x="118.31" y="415.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.20%)</title><rect x="847.7" y="453" width="2.4" height="15.0" fill="rgb(205,137,36)" rx="2" ry="2" />
<text  x="850.73" y="463.5" ></text>
</g>
<g >
<title>iterate_dir (1 samples, 0.20%)</title><rect x="1046.4" y="389" width="2.4" height="15.0" fill="rgb(219,45,32)" rx="2" ry="2" />
<text  x="1049.39" y="399.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (27 samples, 5.48%)</title><rect x="38.7" y="421" width="64.6" height="15.0" fill="rgb(217,115,32)" rx="2" ry="2" />
<text  x="41.72" y="431.5" >entry_S..</text>
</g>
<g >
<title>cpu_startup_entry (12 samples, 2.43%)</title><rect x="1158.9" y="357" width="28.7" height="15.0" fill="rgb(233,30,52)" rx="2" ry="2" />
<text  x="1161.88" y="367.5" >cp..</text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (1 samples, 0.20%)</title><rect x="840.5" y="453" width="2.4" height="15.0" fill="rgb(225,208,45)" rx="2" ry="2" />
<text  x="843.55" y="463.5" ></text>
</g>
<g >
<title>__libc_pread64 (334 samples, 67.75%)</title><rect x="31.5" y="437" width="799.5" height="15.0" fill="rgb(215,34,30)" rx="2" ry="2" />
<text  x="34.54" y="447.5" >__libc_pread64</text>
</g>
<g >
<title>ret_from_fork (5 samples, 1.01%)</title><rect x="12.4" y="453" width="12.0" height="15.0" fill="rgb(219,58,15)" rx="2" ry="2" />
<text  x="15.39" y="463.5" ></text>
</g>
<g >
<title>pick_next_task_fair (1 samples, 0.20%)</title><rect x="24.4" y="373" width="2.4" height="15.0" fill="rgb(232,146,50)" rx="2" ry="2" />
<text  x="27.36" y="383.5" ></text>
</g>
<g >
<title>rebalance_domains (1 samples, 0.20%)</title><rect x="1158.9" y="165" width="2.4" height="15.0" fill="rgb(231,201,30)" rx="2" ry="2" />
<text  x="1161.88" y="175.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.20%)</title><rect x="845.3" y="421" width="2.4" height="15.0" fill="rgb(246,208,15)" rx="2" ry="2" />
<text  x="848.33" y="431.5" ></text>
</g>
<g >
<title>microbench-128886/128886 (341 samples, 69.17%)</title><rect x="26.8" y="469" width="816.1" height="15.0" fill="rgb(224,118,51)" rx="2" ry="2" />
<text  x="29.75" y="479.5" >microbench-128886/128886</text>
</g>
<g >
<title>all (493 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(205,56,1)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>__seccomp_filter (1 samples, 0.20%)</title><rect x="1187.6" y="357" width="2.4" height="15.0" fill="rgb(253,210,11)" rx="2" ry="2" />
<text  x="1190.61" y="367.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.20%)</title><rect x="845.3" y="453" width="2.4" height="15.0" fill="rgb(221,111,10)" rx="2" ry="2" />
<text  x="848.33" y="463.5" ></text>
</g>
<g >
<title>copy_page_to_iter_iovec (85 samples, 17.24%)</title><rect x="237.4" y="277" width="203.4" height="15.0" fill="rgb(215,136,52)" rx="2" ry="2" />
<text  x="240.38" y="287.5" >copy_page_to_iter_iovec</text>
</g>
<g >
<title>find_get_entry (16 samples, 3.25%)</title><rect x="460.0" y="277" width="38.3" height="15.0" fill="rgb(246,152,26)" rx="2" ry="2" />
<text  x="462.98" y="287.5" >fin..</text>
</g>
<g >
<title>ext4_es_scan (1 samples, 0.20%)</title><rect x="1039.2" y="229" width="2.4" height="15.0" fill="rgb(219,7,23)" rx="2" ry="2" />
<text  x="1042.21" y="239.5" ></text>
</g>
<g >
<title>__perf_event_enable (77 samples, 15.62%)</title><rect x="850.1" y="165" width="184.3" height="15.0" fill="rgb(248,225,45)" rx="2" ry="2" />
<text  x="853.12" y="175.5" >__perf_event_enable</text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.20%)</title><rect x="10.0" y="389" width="2.4" height="15.0" fill="rgb(239,103,13)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>remote_function (77 samples, 15.62%)</title><rect x="850.1" y="197" width="184.3" height="15.0" fill="rgb(216,142,38)" rx="2" ry="2" />
<text  x="853.12" y="207.5" >remote_function</text>
</g>
<g >
<title>sudo-128891/128891 (1 samples, 0.20%)</title><rect x="1051.2" y="469" width="2.4" height="15.0" fill="rgb(227,89,53)" rx="2" ry="2" />
<text  x="1054.18" y="479.5" ></text>
</g>
<g >
<title>kworker/0:0-eve-127264/127264 (5 samples, 1.01%)</title><rect x="12.4" y="469" width="12.0" height="15.0" fill="rgb(211,3,11)" rx="2" ry="2" />
<text  x="15.39" y="479.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.20%)</title><rect x="1036.8" y="405" width="2.4" height="15.0" fill="rgb(224,143,7)" rx="2" ry="2" />
<text  x="1039.82" y="415.5" ></text>
</g>
</g>
</svg>
