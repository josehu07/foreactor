<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="438.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="421" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="421" > </text>
<g id="frames">
<g >
<title>kiocb_done (36 samples, 8.59%)</title><rect x="570.4" y="165" width="101.4" height="15.0" fill="rgb(210,88,8)" rx="2" ry="2" />
<text  x="573.43" y="175.5" >kiocb_done</text>
</g>
<g >
<title>x86_pmu_enable (5 samples, 1.19%)</title><rect x="995.7" y="37" width="14.1" height="15.0" fill="rgb(250,142,47)" rx="2" ry="2" />
<text  x="998.68" y="47.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="1018.2" y="325" width="2.8" height="15.0" fill="rgb(228,148,53)" rx="2" ry="2" />
<text  x="1021.21" y="335.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.24%)</title><rect x="12.8" y="325" width="2.8" height="15.0" fill="rgb(248,205,53)" rx="2" ry="2" />
<text  x="15.82" y="335.5" ></text>
</g>
<g >
<title>io_iter_do_read (144 samples, 34.37%)</title><rect x="164.9" y="165" width="405.5" height="15.0" fill="rgb(238,37,20)" rx="2" ry="2" />
<text  x="167.89" y="175.5" >io_iter_do_read</text>
</g>
<g >
<title>do_syscall_64 (253 samples, 60.38%)</title><rect x="52.2" y="309" width="712.5" height="15.0" fill="rgb(218,30,25)" rx="2" ry="2" />
<text  x="55.24" y="319.5" >do_syscall_64</text>
</g>
<g >
<title>kmem_cache_free (10 samples, 2.39%)</title><rect x="629.6" y="69" width="28.1" height="15.0" fill="rgb(234,9,26)" rx="2" ry="2" />
<text  x="632.57" y="79.5" >k..</text>
</g>
<g >
<title>start_secondary (48 samples, 11.46%)</title><rect x="1023.8" y="341" width="135.2" height="15.0" fill="rgb(233,61,49)" rx="2" ry="2" />
<text  x="1026.84" y="351.5" >start_secondary</text>
</g>
<g >
<title>main (78 samples, 18.62%)</title><rect x="792.9" y="341" width="219.7" height="15.0" fill="rgb(234,81,48)" rx="2" ry="2" />
<text  x="795.91" y="351.5" >main</text>
</g>
<g >
<title>drm_gem_shmem_put_pages_locked (1 samples, 0.24%)</title><rect x="12.8" y="229" width="2.8" height="15.0" fill="rgb(220,82,0)" rx="2" ry="2" />
<text  x="15.82" y="239.5" ></text>
</g>
<g >
<title>__io_cqring_fill_event (1 samples, 0.24%)</title><rect x="576.1" y="117" width="2.8" height="15.0" fill="rgb(213,85,41)" rx="2" ry="2" />
<text  x="579.06" y="127.5" ></text>
</g>
<g >
<title>migration_cpu_stop (1 samples, 0.24%)</title><rect x="790.1" y="293" width="2.8" height="15.0" fill="rgb(210,9,47)" rx="2" ry="2" />
<text  x="793.10" y="303.5" ></text>
</g>
<g >
<title>sh-128905/128905 (1 samples, 0.24%)</title><rect x="1018.2" y="373" width="2.8" height="15.0" fill="rgb(208,90,12)" rx="2" ry="2" />
<text  x="1021.21" y="383.5" ></text>
</g>
<g >
<title>exec_binprm (1 samples, 0.24%)</title><rect x="1012.6" y="261" width="2.8" height="15.0" fill="rgb(229,168,36)" rx="2" ry="2" />
<text  x="1015.58" y="271.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.24%)</title><rect x="10.0" y="325" width="2.8" height="15.0" fill="rgb(213,148,28)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>io_queue_sqe (215 samples, 51.31%)</title><rect x="133.9" y="229" width="605.5" height="15.0" fill="rgb(232,148,14)" rx="2" ry="2" />
<text  x="136.91" y="239.5" >io_queue_sqe</text>
</g>
<g >
<title>psi_group_change (1 samples, 0.24%)</title><rect x="15.6" y="245" width="2.8" height="15.0" fill="rgb(227,9,9)" rx="2" ry="2" />
<text  x="18.63" y="255.5" ></text>
</g>
<g >
<title>atime_needs_update (8 samples, 1.91%)</title><rect x="533.8" y="85" width="22.5" height="15.0" fill="rgb(243,78,48)" rx="2" ry="2" />
<text  x="536.82" y="95.5" >a..</text>
</g>
<g >
<title>fput_many (2 samples, 0.48%)</title><rect x="623.9" y="53" width="5.7" height="15.0" fill="rgb(211,14,26)" rx="2" ry="2" />
<text  x="626.94" y="63.5" ></text>
</g>
<g >
<title>drm_atomic_helper_crtc_destroy_state (1 samples, 0.24%)</title><rect x="10.0" y="229" width="2.8" height="15.0" fill="rgb(254,25,11)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.24%)</title><rect x="10.0" y="309" width="2.8" height="15.0" fill="rgb(219,21,34)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>swapper-?/0 (59 samples, 14.08%)</title><rect x="1023.8" y="373" width="166.2" height="15.0" fill="rgb(207,3,31)" rx="2" ry="2" />
<text  x="1026.84" y="383.5" >swapper-?/0</text>
</g>
<g >
<title>kmem_cache_alloc_bulk (5 samples, 1.19%)</title><rect x="739.4" y="245" width="14.1" height="15.0" fill="rgb(211,211,9)" rx="2" ry="2" />
<text  x="742.40" y="255.5" ></text>
</g>
<g >
<title>__list_lru_walk_one (1 samples, 0.24%)</title><rect x="1018.2" y="69" width="2.8" height="15.0" fill="rgb(232,181,31)" rx="2" ry="2" />
<text  x="1021.21" y="79.5" ></text>
</g>
<g >
<title>drm_gem_shmem_vunmap (1 samples, 0.24%)</title><rect x="12.8" y="245" width="2.8" height="15.0" fill="rgb(251,224,31)" rx="2" ry="2" />
<text  x="15.82" y="255.5" ></text>
</g>
<g >
<title>arch_call_rest_init (11 samples, 2.63%)</title><rect x="1159.0" y="293" width="31.0" height="15.0" fill="rgb(238,43,44)" rx="2" ry="2" />
<text  x="1162.02" y="303.5" >ar..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.24%)</title><rect x="1159.0" y="133" width="2.8" height="15.0" fill="rgb(218,80,28)" rx="2" ry="2" />
<text  x="1162.02" y="143.5" ></text>
</g>
<g >
<title>dequeue_task (1 samples, 0.24%)</title><rect x="790.1" y="261" width="2.8" height="15.0" fill="rgb(223,183,31)" rx="2" ry="2" />
<text  x="793.10" y="271.5" ></text>
</g>
<g >
<title>__perf_event_enable (77 samples, 18.38%)</title><rect x="792.9" y="69" width="216.9" height="15.0" fill="rgb(246,124,8)" rx="2" ry="2" />
<text  x="795.91" y="79.5" >__perf_event_enable</text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.24%)</title><rect x="1015.4" y="341" width="2.8" height="15.0" fill="rgb(208,134,42)" rx="2" ry="2" />
<text  x="1018.39" y="351.5" ></text>
</g>
<g >
<title>__GI___ioctl (78 samples, 18.62%)</title><rect x="792.9" y="277" width="219.7" height="15.0" fill="rgb(243,132,7)" rx="2" ry="2" />
<text  x="795.91" y="287.5" >__GI___ioctl</text>
</g>
<g >
<title>io_submit_sqes (250 samples, 59.67%)</title><rect x="57.9" y="261" width="704.0" height="15.0" fill="rgb(249,226,23)" rx="2" ry="2" />
<text  x="60.88" y="271.5" >io_submit_sqes</text>
</g>
<g >
<title>PageHuge (1 samples, 0.24%)</title><rect x="226.8" y="101" width="2.9" height="15.0" fill="rgb(241,110,16)" rx="2" ry="2" />
<text  x="229.85" y="111.5" ></text>
</g>
<g >
<title>_perf_event_enable (77 samples, 18.38%)</title><rect x="792.9" y="165" width="216.9" height="15.0" fill="rgb(246,203,29)" rx="2" ry="2" />
<text  x="795.91" y="175.5" >_perf_event_enable</text>
</g>
<g >
<title>find_get_entry (25 samples, 5.97%)</title><rect x="455.0" y="85" width="70.4" height="15.0" fill="rgb(226,209,24)" rx="2" ry="2" />
<text  x="457.96" y="95.5" >find_ge..</text>
</g>
<g >
<title>mmput (1 samples, 0.24%)</title><rect x="1012.6" y="181" width="2.8" height="15.0" fill="rgb(229,107,21)" rx="2" ry="2" />
<text  x="1015.58" y="191.5" ></text>
</g>
<g >
<title>move_queued_task (1 samples, 0.24%)</title><rect x="790.1" y="277" width="2.8" height="15.0" fill="rgb(238,155,49)" rx="2" ry="2" />
<text  x="793.10" y="287.5" ></text>
</g>
<g >
<title>import_single_range (3 samples, 0.72%)</title><rect x="156.4" y="165" width="8.5" height="15.0" fill="rgb(215,165,27)" rx="2" ry="2" />
<text  x="159.44" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.24%)</title><rect x="1012.6" y="309" width="2.8" height="15.0" fill="rgb(233,229,53)" rx="2" ry="2" />
<text  x="1015.58" y="319.5" ></text>
</g>
<g >
<title>aa_file_perm (4 samples, 0.95%)</title><rect x="691.5" y="117" width="11.3" height="15.0" fill="rgb(254,215,8)" rx="2" ry="2" />
<text  x="694.53" y="127.5" ></text>
</g>
<g >
<title>sh-128901/128901 (1 samples, 0.24%)</title><rect x="1015.4" y="373" width="2.8" height="15.0" fill="rgb(206,159,24)" rx="2" ry="2" />
<text  x="1018.39" y="383.5" ></text>
</g>
<g >
<title>__io_queue_sqe (2 samples, 0.48%)</title><rect x="128.3" y="229" width="5.6" height="15.0" fill="rgb(222,61,43)" rx="2" ry="2" />
<text  x="131.28" y="239.5" ></text>
</g>
<g >
<title>zap_pmd_range.isra.0 (1 samples, 0.24%)</title><rect x="1012.6" y="101" width="2.8" height="15.0" fill="rgb(212,185,0)" rx="2" ry="2" />
<text  x="1015.58" y="111.5" ></text>
</g>
<g >
<title>_perf_ioctl (77 samples, 18.38%)</title><rect x="792.9" y="197" width="216.9" height="15.0" fill="rgb(215,109,24)" rx="2" ry="2" />
<text  x="795.91" y="207.5" >_perf_ioctl</text>
</g>
<g >
<title>copy_page_to_iter_iovec (77 samples, 18.38%)</title><rect x="235.3" y="85" width="216.8" height="15.0" fill="rgb(250,78,31)" rx="2" ry="2" />
<text  x="238.30" y="95.5" >copy_page_to_iter_iovec</text>
</g>
<g >
<title>psi_group_change (1 samples, 0.24%)</title><rect x="790.1" y="229" width="2.8" height="15.0" fill="rgb(244,41,24)" rx="2" ry="2" />
<text  x="793.10" y="239.5" ></text>
</g>
<g >
<title>io_req_prep (8 samples, 1.91%)</title><rect x="716.9" y="213" width="22.5" height="15.0" fill="rgb(243,189,4)" rx="2" ry="2" />
<text  x="719.87" y="223.5" >i..</text>
</g>
<g >
<title>fget_many (5 samples, 1.19%)</title><rect x="108.6" y="213" width="14.0" height="15.0" fill="rgb(244,228,27)" rx="2" ry="2" />
<text  x="111.57" y="223.5" ></text>
</g>
<g >
<title>xas_load (16 samples, 3.82%)</title><rect x="480.3" y="69" width="45.1" height="15.0" fill="rgb(250,130,50)" rx="2" ry="2" />
<text  x="483.31" y="79.5" >xas_..</text>
</g>
<g >
<title>sudo-128903/128903 (1 samples, 0.24%)</title><rect x="1021.0" y="373" width="2.8" height="15.0" fill="rgb(249,82,54)" rx="2" ry="2" />
<text  x="1024.03" y="383.5" ></text>
</g>
<g >
<title>exec_binprm (1 samples, 0.24%)</title><rect x="1015.4" y="261" width="2.8" height="15.0" fill="rgb(208,190,49)" rx="2" ry="2" />
<text  x="1018.39" y="271.5" ></text>
</g>
<g >
<title>unmap_page_range (1 samples, 0.24%)</title><rect x="1012.6" y="117" width="2.8" height="15.0" fill="rgb(229,182,37)" rx="2" ry="2" />
<text  x="1015.58" y="127.5" ></text>
</g>
<g >
<title>proc_sys_call_handler (1 samples, 0.24%)</title><rect x="1018.2" y="229" width="2.8" height="15.0" fill="rgb(231,20,46)" rx="2" ry="2" />
<text  x="1021.21" y="239.5" ></text>
</g>
<g >
<title>x86_64_start_kernel (11 samples, 2.63%)</title><rect x="1159.0" y="341" width="31.0" height="15.0" fill="rgb(253,196,10)" rx="2" ry="2" />
<text  x="1162.02" y="351.5" >x8..</text>
</g>
<g >
<title>__io_uring_flush_sq (2 samples, 0.48%)</title><rect x="21.3" y="325" width="5.6" height="15.0" fill="rgb(238,109,6)" rx="2" ry="2" />
<text  x="24.26" y="335.5" ></text>
</g>
<g >
<title>__fget_light (1 samples, 0.24%)</title><rect x="52.2" y="261" width="2.9" height="15.0" fill="rgb(214,110,1)" rx="2" ry="2" />
<text  x="55.24" y="271.5" ></text>
</g>
<g >
<title>pagecache_get_page (26 samples, 6.21%)</title><rect x="455.0" y="101" width="73.2" height="15.0" fill="rgb(230,82,38)" rx="2" ry="2" />
<text  x="457.96" y="111.5" >pagecach..</text>
</g>
<g >
<title>perf_event_for_each_child (77 samples, 18.38%)</title><rect x="792.9" y="181" width="216.9" height="15.0" fill="rgb(239,39,12)" rx="2" ry="2" />
<text  x="795.91" y="191.5" >perf_event_for_each_child</text>
</g>
<g >
<title>setup_arg_pages (1 samples, 0.24%)</title><rect x="1015.4" y="213" width="2.8" height="15.0" fill="rgb(211,26,39)" rx="2" ry="2" />
<text  x="1018.39" y="223.5" ></text>
</g>
<g >
<title>ctx_resched (77 samples, 18.38%)</title><rect x="792.9" y="53" width="216.9" height="15.0" fill="rgb(213,88,36)" rx="2" ry="2" />
<text  x="795.91" y="63.5" >ctx_resched</text>
</g>
<g >
<title>worker_thread (1 samples, 0.24%)</title><rect x="18.4" y="325" width="2.9" height="15.0" fill="rgb(215,11,15)" rx="2" ry="2" />
<text  x="21.45" y="335.5" ></text>
</g>
<g >
<title>kworker/0:0-eve-127264/127264 (1 samples, 0.24%)</title><rect x="10.0" y="373" width="2.8" height="15.0" fill="rgb(234,187,44)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.24%)</title><rect x="1012.6" y="69" width="2.8" height="15.0" fill="rgb(235,54,40)" rx="2" ry="2" />
<text  x="1015.58" y="79.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (4 samples, 0.95%)</title><rect x="657.7" y="69" width="11.3" height="15.0" fill="rgb(231,39,24)" rx="2" ry="2" />
<text  x="660.73" y="79.5" ></text>
</g>
<g >
<title>exit_mmap (1 samples, 0.24%)</title><rect x="1012.6" y="165" width="2.8" height="15.0" fill="rgb(251,41,47)" rx="2" ry="2" />
<text  x="1015.58" y="175.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.24%)</title><rect x="1018.2" y="277" width="2.8" height="15.0" fill="rgb(232,190,9)" rx="2" ry="2" />
<text  x="1021.21" y="287.5" ></text>
</g>
<g >
<title>bprm_execve (1 samples, 0.24%)</title><rect x="1012.6" y="277" width="2.8" height="15.0" fill="rgb(223,121,5)" rx="2" ry="2" />
<text  x="1015.58" y="287.5" ></text>
</g>
<g >
<title>do_idle (11 samples, 2.63%)</title><rect x="1159.0" y="245" width="31.0" height="15.0" fill="rgb(229,16,50)" rx="2" ry="2" />
<text  x="1162.02" y="255.5" >do..</text>
</g>
<g >
<title>io_prep_rw (5 samples, 1.19%)</title><rect x="725.3" y="197" width="14.1" height="15.0" fill="rgb(228,176,45)" rx="2" ry="2" />
<text  x="728.32" y="207.5" ></text>
</g>
<g >
<title>io_read (1 samples, 0.24%)</title><rect x="711.2" y="197" width="2.9" height="15.0" fill="rgb(237,64,18)" rx="2" ry="2" />
<text  x="714.24" y="207.5" ></text>
</g>
<g >
<title>kworker/u32:0-e-128704/128704 (1 samples, 0.24%)</title><rect x="15.6" y="373" width="2.8" height="15.0" fill="rgb(207,133,32)" rx="2" ry="2" />
<text  x="18.63" y="383.5" ></text>
</g>
<g >
<title>syscall (257 samples, 61.34%)</title><rect x="46.6" y="341" width="723.8" height="15.0" fill="rgb(241,78,28)" rx="2" ry="2" />
<text  x="49.61" y="351.5" >syscall</text>
</g>
<g >
<title>psi_task_change (1 samples, 0.24%)</title><rect x="15.6" y="261" width="2.8" height="15.0" fill="rgb(215,228,38)" rx="2" ry="2" />
<text  x="18.63" y="271.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (1 samples, 0.24%)</title><rect x="1015.4" y="181" width="2.8" height="15.0" fill="rgb(214,135,3)" rx="2" ry="2" />
<text  x="1018.39" y="191.5" ></text>
</g>
<g >
<title>proc_sys_write (1 samples, 0.24%)</title><rect x="1018.2" y="245" width="2.8" height="15.0" fill="rgb(238,100,50)" rx="2" ry="2" />
<text  x="1021.21" y="255.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (47 samples, 11.22%)</title><rect x="1026.7" y="293" width="132.3" height="15.0" fill="rgb(251,104,12)" rx="2" ry="2" />
<text  x="1029.66" y="303.5" >cpuidle_idle_call</text>
</g>
<g >
<title>kiocb_done (1 samples, 0.24%)</title><rect x="705.6" y="181" width="2.8" height="15.0" fill="rgb(240,199,1)" rx="2" ry="2" />
<text  x="708.61" y="191.5" ></text>
</g>
<g >
<title>find_get_entry (1 samples, 0.24%)</title><rect x="452.1" y="101" width="2.9" height="15.0" fill="rgb(214,166,18)" rx="2" ry="2" />
<text  x="455.15" y="111.5" ></text>
</g>
<g >
<title>__x64_sys_ioctl (77 samples, 18.38%)</title><rect x="792.9" y="229" width="216.9" height="15.0" fill="rgb(224,87,7)" rx="2" ry="2" />
<text  x="795.91" y="239.5" >__x64_sys_ioctl</text>
</g>
<g >
<title>run_exper_io_uring (1 samples, 0.24%)</title><rect x="787.3" y="357" width="2.8" height="15.0" fill="rgb(250,177,35)" rx="2" ry="2" />
<text  x="790.28" y="367.5" ></text>
</g>
<g >
<title>list_lru_walk_one (1 samples, 0.24%)</title><rect x="1018.2" y="85" width="2.8" height="15.0" fill="rgb(213,174,37)" rx="2" ry="2" />
<text  x="1021.21" y="95.5" ></text>
</g>
<g >
<title>security_file_permission (10 samples, 2.39%)</title><rect x="674.6" y="149" width="28.2" height="15.0" fill="rgb(220,127,38)" rx="2" ry="2" />
<text  x="677.63" y="159.5" >s..</text>
</g>
<g >
<title>dequeue_task (1 samples, 0.24%)</title><rect x="15.6" y="277" width="2.8" height="15.0" fill="rgb(238,128,52)" rx="2" ry="2" />
<text  x="18.63" y="287.5" ></text>
</g>
<g >
<title>migration/3-31/31 (1 samples, 0.24%)</title><rect x="790.1" y="373" width="2.8" height="15.0" fill="rgb(222,104,32)" rx="2" ry="2" />
<text  x="793.10" y="383.5" ></text>
</g>
<g >
<title>io_put_req (26 samples, 6.21%)</title><rect x="598.6" y="101" width="73.2" height="15.0" fill="rgb(237,34,28)" rx="2" ry="2" />
<text  x="601.59" y="111.5" >io_put_req</text>
</g>
<g >
<title>__io_queue_sqe (206 samples, 49.16%)</title><rect x="133.9" y="213" width="580.2" height="15.0" fill="rgb(224,110,53)" rx="2" ry="2" />
<text  x="136.91" y="223.5" >__io_queue_sqe</text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.24%)</title><rect x="1012.6" y="245" width="2.8" height="15.0" fill="rgb(253,141,40)" rx="2" ry="2" />
<text  x="1015.58" y="255.5" ></text>
</g>
<g >
<title>run_builtin (78 samples, 18.62%)</title><rect x="792.9" y="325" width="219.7" height="15.0" fill="rgb(248,10,44)" rx="2" ry="2" />
<text  x="795.91" y="335.5" >run_builtin</text>
</g>
<g >
<title>__io_req_complete (1 samples, 0.24%)</title><rect x="570.4" y="149" width="2.8" height="15.0" fill="rgb(212,214,24)" rx="2" ry="2" />
<text  x="573.43" y="159.5" ></text>
</g>
<g >
<title>generic_file_buffered_read (138 samples, 32.94%)</title><rect x="173.3" y="117" width="388.7" height="15.0" fill="rgb(210,193,43)" rx="2" ry="2" />
<text  x="176.34" y="127.5" >generic_file_buffered_read</text>
</g>
<g >
<title>drop_slab_node (1 samples, 0.24%)</title><rect x="1018.2" y="181" width="2.8" height="15.0" fill="rgb(231,118,31)" rx="2" ry="2" />
<text  x="1021.21" y="191.5" ></text>
</g>
<g >
<title>inode_lru_isolate (1 samples, 0.24%)</title><rect x="1018.2" y="53" width="2.8" height="15.0" fill="rgb(226,164,25)" rx="2" ry="2" />
<text  x="1021.21" y="63.5" ></text>
</g>
<g >
<title>evlist__enable (78 samples, 18.62%)</title><rect x="792.9" y="293" width="219.7" height="15.0" fill="rgb(227,19,43)" rx="2" ry="2" />
<text  x="795.91" y="303.5" >evlist__enable</text>
</g>
<g >
<title>drm_atomic_state_default_clear (1 samples, 0.24%)</title><rect x="10.0" y="245" width="2.8" height="15.0" fill="rgb(208,22,6)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>bprm_execve (1 samples, 0.24%)</title><rect x="1015.4" y="277" width="2.8" height="15.0" fill="rgb(241,228,33)" rx="2" ry="2" />
<text  x="1018.39" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.24%)</title><rect x="1159.0" y="117" width="2.8" height="15.0" fill="rgb(218,58,12)" rx="2" ry="2" />
<text  x="1162.02" y="127.5" ></text>
</g>
<g >
<title>calc_load_nohz_stop (1 samples, 0.24%)</title><rect x="1023.8" y="293" width="2.9" height="15.0" fill="rgb(253,16,25)" rx="2" ry="2" />
<text  x="1026.84" y="303.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (1 samples, 0.24%)</title><rect x="759.1" y="245" width="2.8" height="15.0" fill="rgb(242,103,15)" rx="2" ry="2" />
<text  x="762.12" y="255.5" ></text>
</g>
<g >
<title>__do_sys_io_uring_enter (252 samples, 60.14%)</title><rect x="52.2" y="277" width="709.7" height="15.0" fill="rgb(245,0,28)" rx="2" ry="2" />
<text  x="55.24" y="287.5" >__do_sys_io_uring_enter</text>
</g>
<g >
<title>slab_free_freelist_hook (2 samples, 0.48%)</title><rect x="652.1" y="53" width="5.6" height="15.0" fill="rgb(213,142,22)" rx="2" ry="2" />
<text  x="655.10" y="63.5" ></text>
</g>
<g >
<title>drm_fb_helper_dirty_work (1 samples, 0.24%)</title><rect x="10.0" y="293" width="2.8" height="15.0" fill="rgb(212,225,38)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>prune_icache_sb (1 samples, 0.24%)</title><rect x="1018.2" y="101" width="2.8" height="15.0" fill="rgb(223,26,49)" rx="2" ry="2" />
<text  x="1021.21" y="111.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (9 samples, 2.15%)</title><rect x="1161.8" y="181" width="25.4" height="15.0" fill="rgb(215,199,39)" rx="2" ry="2" />
<text  x="1164.84" y="191.5" >m..</text>
</g>
<g >
<title>__x64_sys_execve (1 samples, 0.24%)</title><rect x="1015.4" y="309" width="2.8" height="15.0" fill="rgb(231,168,30)" rx="2" ry="2" />
<text  x="1018.39" y="319.5" ></text>
</g>
<g >
<title>shift_arg_pages (1 samples, 0.24%)</title><rect x="1015.4" y="197" width="2.8" height="15.0" fill="rgb(209,81,44)" rx="2" ry="2" />
<text  x="1018.39" y="207.5" ></text>
</g>
<g >
<title>copyout (1 samples, 0.24%)</title><rect x="449.3" y="69" width="2.8" height="15.0" fill="rgb(238,34,26)" rx="2" ry="2" />
<text  x="452.33" y="79.5" ></text>
</g>
<g >
<title>drm_gem_put_pages (1 samples, 0.24%)</title><rect x="12.8" y="213" width="2.8" height="15.0" fill="rgb(230,14,38)" rx="2" ry="2" />
<text  x="15.82" y="223.5" ></text>
</g>
<g >
<title>io_file_supports_async (1 samples, 0.24%)</title><rect x="142.4" y="181" width="2.8" height="15.0" fill="rgb(234,13,18)" rx="2" ry="2" />
<text  x="145.36" y="191.5" ></text>
</g>
<g >
<title>rest_init (11 samples, 2.63%)</title><rect x="1159.0" y="277" width="31.0" height="15.0" fill="rgb(205,189,13)" rx="2" ry="2" />
<text  x="1162.02" y="287.5" >re..</text>
</g>
<g >
<title>mem_cgroup_uncharge_list (1 samples, 0.24%)</title><rect x="1015.4" y="133" width="2.8" height="15.0" fill="rgb(205,195,1)" rx="2" ry="2" />
<text  x="1018.39" y="143.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (142 samples, 33.89%)</title><rect x="164.9" y="149" width="399.9" height="15.0" fill="rgb(229,154,6)" rx="2" ry="2" />
<text  x="167.89" y="159.5" >ext4_file_read_iter</text>
</g>
<g >
<title>release_pages (1 samples, 0.24%)</title><rect x="1015.4" y="149" width="2.8" height="15.0" fill="rgb(229,225,26)" rx="2" ry="2" />
<text  x="1018.39" y="159.5" ></text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.24%)</title><rect x="1026.7" y="213" width="2.8" height="15.0" fill="rgb(211,187,39)" rx="2" ry="2" />
<text  x="1029.66" y="223.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.24%)</title><rect x="15.6" y="293" width="2.8" height="15.0" fill="rgb(236,92,3)" rx="2" ry="2" />
<text  x="18.63" y="303.5" ></text>
</g>
<g >
<title>drm_atomic_helper_dirtyfb (1 samples, 0.24%)</title><rect x="10.0" y="277" width="2.8" height="15.0" fill="rgb(216,79,2)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>copy_page_to_iter (78 samples, 18.62%)</title><rect x="232.5" y="101" width="219.6" height="15.0" fill="rgb(225,95,36)" rx="2" ry="2" />
<text  x="235.48" y="111.5" >copy_page_to_iter</text>
</g>
<g >
<title>io_dismantle_req (1 samples, 0.24%)</title><rect x="669.0" y="85" width="2.8" height="15.0" fill="rgb(253,120,4)" rx="2" ry="2" />
<text  x="672.00" y="95.5" ></text>
</g>
<g >
<title>__fsnotify_parent (3 samples, 0.72%)</title><rect x="683.1" y="133" width="8.4" height="15.0" fill="rgb(210,118,18)" rx="2" ry="2" />
<text  x="686.08" y="143.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.24%)</title><rect x="15.6" y="357" width="2.8" height="15.0" fill="rgb(246,189,12)" rx="2" ry="2" />
<text  x="18.63" y="367.5" ></text>
</g>
<g >
<title>current_time (2 samples, 0.48%)</title><rect x="556.3" y="85" width="5.7" height="15.0" fill="rgb(233,36,44)" rx="2" ry="2" />
<text  x="559.35" y="95.5" ></text>
</g>
<g >
<title>touch_atime (1 samples, 0.24%)</title><rect x="562.0" y="117" width="2.8" height="15.0" fill="rgb(212,105,12)" rx="2" ry="2" />
<text  x="564.98" y="127.5" ></text>
</g>
<g >
<title>io_submit_flush_completions (33 samples, 7.88%)</title><rect x="578.9" y="117" width="92.9" height="15.0" fill="rgb(239,126,0)" rx="2" ry="2" />
<text  x="581.88" y="127.5" >io_submit_f..</text>
</g>
<g >
<title>touch_atime (12 samples, 2.86%)</title><rect x="528.2" y="101" width="33.8" height="15.0" fill="rgb(209,167,35)" rx="2" ry="2" />
<text  x="531.19" y="111.5" >to..</text>
</g>
<g >
<title>fget_many (1 samples, 0.24%)</title><rect x="91.7" y="229" width="2.8" height="15.0" fill="rgb(212,50,41)" rx="2" ry="2" />
<text  x="94.67" y="239.5" ></text>
</g>
<g >
<title>event_function (77 samples, 18.38%)</title><rect x="792.9" y="85" width="216.9" height="15.0" fill="rgb(234,109,21)" rx="2" ry="2" />
<text  x="795.91" y="95.5" >event_function</text>
</g>
<g >
<title>rw_verify_area (11 samples, 2.63%)</title><rect x="671.8" y="165" width="31.0" height="15.0" fill="rgb(214,19,39)" rx="2" ry="2" />
<text  x="674.81" y="175.5" >rw..</text>
</g>
<g >
<title>microbench-128899/128899 (273 samples, 65.16%)</title><rect x="21.3" y="373" width="768.8" height="15.0" fill="rgb(226,202,5)" rx="2" ry="2" />
<text  x="24.26" y="383.5" >microbench-128899/128899</text>
</g>
<g >
<title>cpuidle_enter (10 samples, 2.39%)</title><rect x="1159.0" y="213" width="28.2" height="15.0" fill="rgb(229,158,48)" rx="2" ry="2" />
<text  x="1162.02" y="223.5" >c..</text>
</g>
<g >
<title>__slab_free (2 samples, 0.48%)</title><rect x="646.5" y="53" width="5.6" height="15.0" fill="rgb(220,4,52)" rx="2" ry="2" />
<text  x="649.47" y="63.5" ></text>
</g>
<g >
<title>io_submit_sqe (219 samples, 52.27%)</title><rect x="122.6" y="245" width="616.8" height="15.0" fill="rgb(206,119,53)" rx="2" ry="2" />
<text  x="125.65" y="255.5" >io_submit_sqe</text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.24%)</title><rect x="776.0" y="341" width="2.8" height="15.0" fill="rgb(233,224,9)" rx="2" ry="2" />
<text  x="779.01" y="351.5" ></text>
</g>
<g >
<title>security_file_permission (1 samples, 0.24%)</title><rect x="702.8" y="165" width="2.8" height="15.0" fill="rgb(216,191,29)" rx="2" ry="2" />
<text  x="705.79" y="175.5" ></text>
</g>
<g >
<title>__run_hrtimer (1 samples, 0.24%)</title><rect x="1159.0" y="85" width="2.8" height="15.0" fill="rgb(252,123,40)" rx="2" ry="2" />
<text  x="1162.02" y="95.5" ></text>
</g>
<g >
<title>check_move_unevictable_pages (1 samples, 0.24%)</title><rect x="12.8" y="197" width="2.8" height="15.0" fill="rgb(230,33,25)" rx="2" ry="2" />
<text  x="15.82" y="207.5" ></text>
</g>
<g >
<title>__io_free_req (20 samples, 4.77%)</title><rect x="612.7" y="85" width="56.3" height="15.0" fill="rgb(215,125,14)" rx="2" ry="2" />
<text  x="615.67" y="95.5" >__io_..</text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.24%)</title><rect x="10.0" y="357" width="2.8" height="15.0" fill="rgb(206,94,25)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.24%)</title><rect x="1029.5" y="213" width="2.8" height="15.0" fill="rgb(215,194,25)" rx="2" ry="2" />
<text  x="1032.47" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (78 samples, 18.62%)</title><rect x="792.9" y="245" width="219.7" height="15.0" fill="rgb(232,119,11)" rx="2" ry="2" />
<text  x="795.91" y="255.5" >do_syscall_64</text>
</g>
<g >
<title>__io_req_complete (35 samples, 8.35%)</title><rect x="573.2" y="133" width="98.6" height="15.0" fill="rgb(228,131,18)" rx="2" ry="2" />
<text  x="576.25" y="143.5" >__io_req_co..</text>
</g>
<g >
<title>drop_caches_sysctl_handler (1 samples, 0.24%)</title><rect x="1018.2" y="213" width="2.8" height="15.0" fill="rgb(254,88,21)" rx="2" ry="2" />
<text  x="1021.21" y="223.5" ></text>
</g>
<g >
<title>do_idle (48 samples, 11.46%)</title><rect x="1023.8" y="309" width="135.2" height="15.0" fill="rgb(210,34,6)" rx="2" ry="2" />
<text  x="1026.84" y="319.5" >do_idle</text>
</g>
<g >
<title>x86_64_start_reservations (11 samples, 2.63%)</title><rect x="1159.0" y="325" width="31.0" height="15.0" fill="rgb(237,94,2)" rx="2" ry="2" />
<text  x="1162.02" y="335.5" >x8..</text>
</g>
<g >
<title>free_pages_and_swap_cache (1 samples, 0.24%)</title><rect x="1015.4" y="165" width="2.8" height="15.0" fill="rgb(244,151,28)" rx="2" ry="2" />
<text  x="1018.39" y="175.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.24%)</title><rect x="1187.2" y="213" width="2.8" height="15.0" fill="rgb(231,154,26)" rx="2" ry="2" />
<text  x="1190.18" y="223.5" ></text>
</g>
<g >
<title>psi_task_change (1 samples, 0.24%)</title><rect x="790.1" y="245" width="2.8" height="15.0" fill="rgb(239,87,2)" rx="2" ry="2" />
<text  x="793.10" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.24%)</title><rect x="1159.0" y="101" width="2.8" height="15.0" fill="rgb(222,116,54)" rx="2" ry="2" />
<text  x="1162.02" y="111.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1 samples, 0.24%)</title><rect x="761.9" y="293" width="2.8" height="15.0" fill="rgb(238,5,6)" rx="2" ry="2" />
<text  x="764.93" y="303.5" ></text>
</g>
<g >
<title>drm_fb_helper_dirty_work (1 samples, 0.24%)</title><rect x="12.8" y="293" width="2.8" height="15.0" fill="rgb(208,174,27)" rx="2" ry="2" />
<text  x="15.82" y="303.5" ></text>
</g>
<g >
<title>do_lookup_x (1 samples, 0.24%)</title><rect x="1021.0" y="357" width="2.8" height="15.0" fill="rgb(218,204,31)" rx="2" ry="2" />
<text  x="1024.03" y="367.5" ></text>
</g>
<g >
<title>drop_slab (1 samples, 0.24%)</title><rect x="1018.2" y="197" width="2.8" height="15.0" fill="rgb(247,90,50)" rx="2" ry="2" />
<text  x="1021.21" y="207.5" ></text>
</g>
<g >
<title>cpu_stopper_thread (1 samples, 0.24%)</title><rect x="790.1" y="309" width="2.8" height="15.0" fill="rgb(219,44,4)" rx="2" ry="2" />
<text  x="793.10" y="319.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.24%)</title><rect x="15.6" y="341" width="2.8" height="15.0" fill="rgb(244,57,52)" rx="2" ry="2" />
<text  x="18.63" y="351.5" ></text>
</g>
<g >
<title>drm_client_buffer_vunmap (1 samples, 0.24%)</title><rect x="12.8" y="277" width="2.8" height="15.0" fill="rgb(238,221,50)" rx="2" ry="2" />
<text  x="15.82" y="287.5" ></text>
</g>
<g >
<title>__fget_files (5 samples, 1.19%)</title><rect x="108.6" y="197" width="14.0" height="15.0" fill="rgb(208,157,22)" rx="2" ry="2" />
<text  x="111.57" y="207.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.24%)</title><rect x="12.8" y="357" width="2.8" height="15.0" fill="rgb(232,112,21)" rx="2" ry="2" />
<text  x="15.82" y="367.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.24%)</title><rect x="1015.4" y="229" width="2.8" height="15.0" fill="rgb(229,175,48)" rx="2" ry="2" />
<text  x="1018.39" y="239.5" ></text>
</g>
<g >
<title>cpuidle_idle_call (10 samples, 2.39%)</title><rect x="1159.0" y="229" width="28.2" height="15.0" fill="rgb(225,194,4)" rx="2" ry="2" />
<text  x="1162.02" y="239.5" >c..</text>
</g>
<g >
<title>cmd_record (78 samples, 18.62%)</title><rect x="792.9" y="309" width="219.7" height="15.0" fill="rgb(215,125,5)" rx="2" ry="2" />
<text  x="795.91" y="319.5" >cmd_record</text>
</g>
<g >
<title>__x64_sys_io_uring_enter (252 samples, 60.14%)</title><rect x="52.2" y="293" width="709.7" height="15.0" fill="rgb(245,178,15)" rx="2" ry="2" />
<text  x="55.24" y="303.5" >__x64_sys_io_uring_enter</text>
</g>
<g >
<title>asm_call_sysvec_on_stack (1 samples, 0.24%)</title><rect x="1159.0" y="149" width="2.8" height="15.0" fill="rgb(227,142,50)" rx="2" ry="2" />
<text  x="1162.02" y="159.5" ></text>
</g>
<g >
<title>perf-128898/128898 (78 samples, 18.62%)</title><rect x="792.9" y="373" width="219.7" height="15.0" fill="rgb(228,9,43)" rx="2" ry="2" />
<text  x="795.91" y="383.5" >perf-128898/128898</text>
</g>
<g >
<title>__drm_atomic_state_free (1 samples, 0.24%)</title><rect x="10.0" y="261" width="2.8" height="15.0" fill="rgb(208,137,44)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>io_issue_sqe (203 samples, 48.45%)</title><rect x="139.5" y="197" width="571.7" height="15.0" fill="rgb(235,116,13)" rx="2" ry="2" />
<text  x="142.55" y="207.5" >io_issue_sqe</text>
</g>
<g >
<title>cpuidle_enter_state (10 samples, 2.39%)</title><rect x="1159.0" y="197" width="28.2" height="15.0" fill="rgb(206,33,3)" rx="2" ry="2" />
<text  x="1162.02" y="207.5" >c..</text>
</g>
<g >
<title>update_process_times (1 samples, 0.24%)</title><rect x="1159.0" y="53" width="2.8" height="15.0" fill="rgb(222,50,38)" rx="2" ry="2" />
<text  x="1162.02" y="63.5" ></text>
</g>
<g >
<title>begin_new_exec (1 samples, 0.24%)</title><rect x="1012.6" y="213" width="2.8" height="15.0" fill="rgb(224,26,13)" rx="2" ry="2" />
<text  x="1015.58" y="223.5" ></text>
</g>
<g >
<title>shrink_slab (1 samples, 0.24%)</title><rect x="1018.2" y="165" width="2.8" height="15.0" fill="rgb(217,225,10)" rx="2" ry="2" />
<text  x="1021.21" y="175.5" ></text>
</g>
<g >
<title>io_file_get (2 samples, 0.48%)</title><rect x="74.8" y="245" width="5.6" height="15.0" fill="rgb(251,76,34)" rx="2" ry="2" />
<text  x="77.77" y="255.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.24%)</title><rect x="525.4" y="85" width="2.8" height="15.0" fill="rgb(214,139,40)" rx="2" ry="2" />
<text  x="528.37" y="95.5" ></text>
</g>
<g >
<title>schedule_idle (1 samples, 0.24%)</title><rect x="1187.2" y="229" width="2.8" height="15.0" fill="rgb(236,50,33)" rx="2" ry="2" />
<text  x="1190.18" y="239.5" ></text>
</g>
<g >
<title>search_binary_handler (1 samples, 0.24%)</title><rect x="1015.4" y="245" width="2.8" height="15.0" fill="rgb(247,37,20)" rx="2" ry="2" />
<text  x="1018.39" y="255.5" ></text>
</g>
<g >
<title>cpu_startup_entry (11 samples, 2.63%)</title><rect x="1159.0" y="261" width="31.0" height="15.0" fill="rgb(218,4,25)" rx="2" ry="2" />
<text  x="1162.02" y="271.5" >cp..</text>
</g>
<g >
<title>asm_exc_page_fault (1 samples, 0.24%)</title><rect x="1021.0" y="341" width="2.8" height="15.0" fill="rgb(245,32,8)" rx="2" ry="2" />
<text  x="1024.03" y="351.5" ></text>
</g>
<g >
<title>io_dismantle_req (3 samples, 0.72%)</title><rect x="621.1" y="69" width="8.5" height="15.0" fill="rgb(239,190,52)" rx="2" ry="2" />
<text  x="624.12" y="79.5" ></text>
</g>
<g >
<title>mwait_idle_with_hints.constprop.0 (45 samples, 10.74%)</title><rect x="1032.3" y="245" width="126.7" height="15.0" fill="rgb(222,32,23)" rx="2" ry="2" />
<text  x="1035.29" y="255.5" >mwait_idle_with..</text>
</g>
<g >
<title>new_sync_write (1 samples, 0.24%)</title><rect x="1018.2" y="261" width="2.8" height="15.0" fill="rgb(228,124,11)" rx="2" ry="2" />
<text  x="1021.21" y="271.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (1 samples, 0.24%)</title><rect x="767.6" y="325" width="2.8" height="15.0" fill="rgb(240,98,48)" rx="2" ry="2" />
<text  x="770.57" y="335.5" ></text>
</g>
<g >
<title>smpboot_thread_fn (1 samples, 0.24%)</title><rect x="790.1" y="325" width="2.8" height="15.0" fill="rgb(230,201,33)" rx="2" ry="2" />
<text  x="793.10" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.24%)</title><rect x="1012.6" y="341" width="2.8" height="15.0" fill="rgb(245,2,9)" rx="2" ry="2" />
<text  x="1015.58" y="351.5" ></text>
</g>
<g >
<title>do_execveat_common (1 samples, 0.24%)</title><rect x="1015.4" y="293" width="2.8" height="15.0" fill="rgb(220,100,36)" rx="2" ry="2" />
<text  x="1018.39" y="303.5" ></text>
</g>
<g >
<title>kfree (1 samples, 0.24%)</title><rect x="10.0" y="213" width="2.8" height="15.0" fill="rgb(213,223,50)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.24%)</title><rect x="1026.7" y="197" width="2.8" height="15.0" fill="rgb(222,203,48)" rx="2" ry="2" />
<text  x="1029.66" y="207.5" ></text>
</g>
<g >
<title>perf-128899/128899 (1 samples, 0.24%)</title><rect x="1012.6" y="373" width="2.8" height="15.0" fill="rgb(243,19,14)" rx="2" ry="2" />
<text  x="1015.58" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (78 samples, 18.62%)</title><rect x="792.9" y="261" width="219.7" height="15.0" fill="rgb(232,159,51)" rx="2" ry="2" />
<text  x="795.91" y="271.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>[unknown] (2 samples, 0.48%)</title><rect x="21.3" y="341" width="5.6" height="15.0" fill="rgb(227,194,7)" rx="2" ry="2" />
<text  x="24.26" y="351.5" ></text>
</g>
<g >
<title>do_reqs_io_uring (3 samples, 0.72%)</title><rect x="778.8" y="357" width="8.5" height="15.0" fill="rgb(231,185,25)" rx="2" ry="2" />
<text  x="781.83" y="367.5" ></text>
</g>
<g >
<title>exec_mmap (1 samples, 0.24%)</title><rect x="1012.6" y="197" width="2.8" height="15.0" fill="rgb(232,75,40)" rx="2" ry="2" />
<text  x="1015.58" y="207.5" ></text>
</g>
<g >
<title>ksys_write (1 samples, 0.24%)</title><rect x="1018.2" y="293" width="2.8" height="15.0" fill="rgb(211,122,1)" rx="2" ry="2" />
<text  x="1021.21" y="303.5" ></text>
</g>
<g >
<title>unmap_single_vma (1 samples, 0.24%)</title><rect x="1012.6" y="133" width="2.8" height="15.0" fill="rgb(211,132,16)" rx="2" ry="2" />
<text  x="1015.58" y="143.5" ></text>
</g>
<g >
<title>load_elf_binary (1 samples, 0.24%)</title><rect x="1012.6" y="229" width="2.8" height="15.0" fill="rgb(246,143,6)" rx="2" ry="2" />
<text  x="1015.58" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1 samples, 0.24%)</title><rect x="46.6" y="325" width="2.8" height="15.0" fill="rgb(205,149,30)" rx="2" ry="2" />
<text  x="49.61" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (254 samples, 60.62%)</title><rect x="49.4" y="325" width="715.3" height="15.0" fill="rgb(209,61,9)" rx="2" ry="2" />
<text  x="52.43" y="335.5" >entry_SYSCALL_64_after_hwframe</text>
</g>
<g >
<title>__GI___execve (1 samples, 0.24%)</title><rect x="1015.4" y="357" width="2.8" height="15.0" fill="rgb(251,27,13)" rx="2" ry="2" />
<text  x="1018.39" y="367.5" ></text>
</g>
<g >
<title>__GI___execve (1 samples, 0.24%)</title><rect x="1012.6" y="357" width="2.8" height="15.0" fill="rgb(206,204,26)" rx="2" ry="2" />
<text  x="1015.58" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.24%)</title><rect x="1159.0" y="69" width="2.8" height="15.0" fill="rgb(236,85,13)" rx="2" ry="2" />
<text  x="1162.02" y="79.5" ></text>
</g>
<g >
<title>_raw_spin_trylock (1 samples, 0.24%)</title><rect x="1018.2" y="37" width="2.8" height="15.0" fill="rgb(254,103,31)" rx="2" ry="2" />
<text  x="1021.21" y="47.5" ></text>
</g>
<g >
<title>super_cache_scan (1 samples, 0.24%)</title><rect x="1018.2" y="117" width="2.8" height="15.0" fill="rgb(234,154,15)" rx="2" ry="2" />
<text  x="1021.21" y="127.5" ></text>
</g>
<g >
<title>zap_pte_range (1 samples, 0.24%)</title><rect x="1012.6" y="85" width="2.8" height="15.0" fill="rgb(210,189,17)" rx="2" ry="2" />
<text  x="1015.58" y="95.5" ></text>
</g>
<g >
<title>all (419 samples, 100%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(242,73,25)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>cpuidle_enter (47 samples, 11.22%)</title><rect x="1026.7" y="277" width="132.3" height="15.0" fill="rgb(235,57,30)" rx="2" ry="2" />
<text  x="1029.66" y="287.5" >cpuidle_enter</text>
</g>
<g >
<title>do_reqs_io_uring (7 samples, 1.67%)</title><rect x="26.9" y="341" width="19.7" height="15.0" fill="rgb(237,201,13)" rx="2" ry="2" />
<text  x="29.90" y="351.5" ></text>
</g>
<g >
<title>event_function_call (77 samples, 18.38%)</title><rect x="792.9" y="149" width="216.9" height="15.0" fill="rgb(230,44,24)" rx="2" ry="2" />
<text  x="795.91" y="159.5" >event_function_call</text>
</g>
<g >
<title>__GI___libc_write (1 samples, 0.24%)</title><rect x="1018.2" y="357" width="2.8" height="15.0" fill="rgb(213,116,16)" rx="2" ry="2" />
<text  x="1021.21" y="367.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.24%)</title><rect x="790.1" y="341" width="2.8" height="15.0" fill="rgb(207,162,29)" rx="2" ry="2" />
<text  x="793.10" y="351.5" ></text>
</g>
<g >
<title>io_file_get (8 samples, 1.91%)</title><rect x="100.1" y="229" width="22.5" height="15.0" fill="rgb(242,9,37)" rx="2" ry="2" />
<text  x="103.12" y="239.5" >i..</text>
</g>
<g >
<title>cpuidle_enter_state (47 samples, 11.22%)</title><rect x="1026.7" y="261" width="132.3" height="15.0" fill="rgb(245,165,41)" rx="2" ry="2" />
<text  x="1029.66" y="271.5" >cpuidle_enter_st..</text>
</g>
<g >
<title>generic_exec_single (77 samples, 18.38%)</title><rect x="792.9" y="117" width="216.9" height="15.0" fill="rgb(243,211,28)" rx="2" ry="2" />
<text  x="795.91" y="127.5" >generic_exec_single</text>
</g>
<g >
<title>generic_file_read_iter (2 samples, 0.48%)</title><rect x="564.8" y="149" width="5.6" height="15.0" fill="rgb(244,99,48)" rx="2" ry="2" />
<text  x="567.80" y="159.5" ></text>
</g>
<g >
<title>do_execveat_common (1 samples, 0.24%)</title><rect x="1012.6" y="293" width="2.8" height="15.0" fill="rgb(225,211,42)" rx="2" ry="2" />
<text  x="1015.58" y="303.5" ></text>
</g>
<g >
<title>io_req_defer (1 samples, 0.24%)</title><rect x="714.1" y="213" width="2.8" height="15.0" fill="rgb(222,182,6)" rx="2" ry="2" />
<text  x="717.06" y="223.5" ></text>
</g>
<g >
<title>[unknown] (266 samples, 63.48%)</title><rect x="21.3" y="357" width="749.1" height="15.0" fill="rgb(253,2,21)" rx="2" ry="2" />
<text  x="24.26" y="367.5" >[unknown]</text>
</g>
<g >
<title>smp_call_function_single (77 samples, 18.38%)</title><rect x="792.9" y="133" width="216.9" height="15.0" fill="rgb(240,6,46)" rx="2" ry="2" />
<text  x="795.91" y="143.5" >smp_call_function_single</text>
</g>
<g >
<title>copy_user_enhanced_fast_string (66 samples, 15.75%)</title><rect x="263.5" y="69" width="185.8" height="15.0" fill="rgb(249,89,40)" rx="2" ry="2" />
<text  x="266.46" y="79.5" >copy_user_enhanced_fast_..</text>
</g>
<g >
<title>secondary_startup_64_no_verify (59 samples, 14.08%)</title><rect x="1023.8" y="357" width="166.2" height="15.0" fill="rgb(212,103,14)" rx="2" ry="2" />
<text  x="1026.84" y="367.5" >secondary_startup_64_..</text>
</g>
<g >
<title>generic_file_read_iter (142 samples, 33.89%)</title><rect x="164.9" y="133" width="399.9" height="15.0" fill="rgb(211,123,8)" rx="2" ry="2" />
<text  x="167.89" y="143.5" >generic_file_read_iter</text>
</g>
<g >
<title>__libc_start_main (78 samples, 18.62%)</title><rect x="792.9" y="357" width="219.7" height="15.0" fill="rgb(238,60,4)" rx="2" ry="2" />
<text  x="795.91" y="367.5" >__libc_start_main</text>
</g>
<g >
<title>fput_many (2 samples, 0.48%)</title><rect x="94.5" y="229" width="5.6" height="15.0" fill="rgb(249,151,16)" rx="2" ry="2" />
<text  x="97.49" y="239.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.24%)</title><rect x="18.4" y="357" width="2.9" height="15.0" fill="rgb(205,189,6)" rx="2" ry="2" />
<text  x="21.45" y="367.5" ></text>
</g>
<g >
<title>clock_gettime@GLIBC_2.2.5 (3 samples, 0.72%)</title><rect x="770.4" y="357" width="8.4" height="15.0" fill="rgb(222,119,19)" rx="2" ry="2" />
<text  x="773.38" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="1015.4" y="325" width="2.8" height="15.0" fill="rgb(239,208,20)" rx="2" ry="2" />
<text  x="1018.39" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (1 samples, 0.24%)</title><rect x="1012.6" y="325" width="2.8" height="15.0" fill="rgb(219,198,27)" rx="2" ry="2" />
<text  x="1015.58" y="335.5" ></text>
</g>
<g >
<title>io_init_req (15 samples, 3.58%)</title><rect x="80.4" y="245" width="42.2" height="15.0" fill="rgb(205,48,42)" rx="2" ry="2" />
<text  x="83.41" y="255.5" >io_..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.24%)</title><rect x="1159.0" y="165" width="2.8" height="15.0" fill="rgb(252,107,20)" rx="2" ry="2" />
<text  x="1162.02" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.48%)</title><rect x="1026.7" y="229" width="5.6" height="15.0" fill="rgb(246,216,45)" rx="2" ry="2" />
<text  x="1029.66" y="239.5" ></text>
</g>
<g >
<title>rw_verify_area (1 samples, 0.24%)</title><rect x="708.4" y="181" width="2.8" height="15.0" fill="rgb(253,125,32)" rx="2" ry="2" />
<text  x="711.42" y="191.5" ></text>
</g>
<g >
<title>worker_thread (1 samples, 0.24%)</title><rect x="15.6" y="325" width="2.8" height="15.0" fill="rgb(247,126,36)" rx="2" ry="2" />
<text  x="18.63" y="335.5" ></text>
</g>
<g >
<title>io_read (199 samples, 47.49%)</title><rect x="145.2" y="181" width="560.4" height="15.0" fill="rgb(234,4,5)" rx="2" ry="2" />
<text  x="148.18" y="191.5" >io_read</text>
</g>
<g >
<title>fput (1 samples, 0.24%)</title><rect x="1009.8" y="229" width="2.8" height="15.0" fill="rgb(221,41,54)" rx="2" ry="2" />
<text  x="1012.76" y="239.5" ></text>
</g>
<g >
<title>do_shrink_slab (1 samples, 0.24%)</title><rect x="1018.2" y="133" width="2.8" height="15.0" fill="rgb(236,142,21)" rx="2" ry="2" />
<text  x="1021.21" y="143.5" ></text>
</g>
<g >
<title>kworker/3:3-eve-124898/124898 (1 samples, 0.24%)</title><rect x="12.8" y="373" width="2.8" height="15.0" fill="rgb(247,224,13)" rx="2" ry="2" />
<text  x="15.82" y="383.5" ></text>
</g>
<g >
<title>apparmor_file_permission (4 samples, 0.95%)</title><rect x="691.5" y="133" width="11.3" height="15.0" fill="rgb(209,25,25)" rx="2" ry="2" />
<text  x="694.53" y="143.5" ></text>
</g>
<g >
<title>current_time (3 samples, 0.72%)</title><rect x="547.9" y="69" width="8.4" height="15.0" fill="rgb(209,204,35)" rx="2" ry="2" />
<text  x="550.90" y="79.5" ></text>
</g>
<g >
<title>_cond_resched (1 samples, 0.24%)</title><rect x="229.7" y="101" width="2.8" height="15.0" fill="rgb(217,82,35)" rx="2" ry="2" />
<text  x="232.67" y="111.5" ></text>
</g>
<g >
<title>__io_import_iovec (1 samples, 0.24%)</title><rect x="153.6" y="165" width="2.8" height="15.0" fill="rgb(226,3,19)" rx="2" ry="2" />
<text  x="156.63" y="175.5" ></text>
</g>
<g >
<title>cpu_startup_entry (48 samples, 11.46%)</title><rect x="1023.8" y="325" width="135.2" height="15.0" fill="rgb(254,81,26)" rx="2" ry="2" />
<text  x="1026.84" y="335.5" >cpu_startup_entry</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.24%)</title><rect x="1159.0" y="181" width="2.8" height="15.0" fill="rgb(230,174,27)" rx="2" ry="2" />
<text  x="1162.02" y="191.5" ></text>
</g>
<g >
<title>io_submit_sqe (1 samples, 0.24%)</title><rect x="55.1" y="261" width="2.8" height="15.0" fill="rgb(251,92,21)" rx="2" ry="2" />
<text  x="58.06" y="271.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.24%)</title><rect x="15.6" y="309" width="2.8" height="15.0" fill="rgb(213,106,47)" rx="2" ry="2" />
<text  x="18.63" y="319.5" ></text>
</g>
<g >
<title>__fget_files (2 samples, 0.48%)</title><rect x="102.9" y="213" width="5.7" height="15.0" fill="rgb(237,78,53)" rx="2" ry="2" />
<text  x="105.94" y="223.5" ></text>
</g>
<g >
<title>ret_from_fork (1 samples, 0.24%)</title><rect x="790.1" y="357" width="2.8" height="15.0" fill="rgb(241,62,31)" rx="2" ry="2" />
<text  x="793.10" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_write (1 samples, 0.24%)</title><rect x="1018.2" y="309" width="2.8" height="15.0" fill="rgb(245,156,28)" rx="2" ry="2" />
<text  x="1021.21" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.48%)</title><rect x="1026.7" y="245" width="5.6" height="15.0" fill="rgb(226,194,38)" rx="2" ry="2" />
<text  x="1029.66" y="255.5" ></text>
</g>
<g >
<title>uncharge_page (1 samples, 0.24%)</title><rect x="1015.4" y="117" width="2.8" height="15.0" fill="rgb(227,9,31)" rx="2" ry="2" />
<text  x="1018.39" y="127.5" ></text>
</g>
<g >
<title>drm_gem_vunmap (1 samples, 0.24%)</title><rect x="12.8" y="261" width="2.8" height="15.0" fill="rgb(225,121,37)" rx="2" ry="2" />
<text  x="15.82" y="271.5" ></text>
</g>
<g >
<title>process_one_work (1 samples, 0.24%)</title><rect x="12.8" y="309" width="2.8" height="15.0" fill="rgb(254,31,29)" rx="2" ry="2" />
<text  x="15.82" y="319.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.24%)</title><rect x="12.8" y="341" width="2.8" height="15.0" fill="rgb(231,211,41)" rx="2" ry="2" />
<text  x="15.82" y="351.5" ></text>
</g>
<g >
<title>remote_function (77 samples, 18.38%)</title><rect x="792.9" y="101" width="216.9" height="15.0" fill="rgb(251,219,46)" rx="2" ry="2" />
<text  x="795.91" y="111.5" >remote_function</text>
</g>
<g >
<title>shrink_slab_memcg (1 samples, 0.24%)</title><rect x="1018.2" y="149" width="2.8" height="15.0" fill="rgb(215,93,51)" rx="2" ry="2" />
<text  x="1021.21" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.24%)</title><rect x="1018.2" y="341" width="2.8" height="15.0" fill="rgb(212,216,12)" rx="2" ry="2" />
<text  x="1021.21" y="351.5" ></text>
</g>
<g >
<title>unmap_vmas (1 samples, 0.24%)</title><rect x="1012.6" y="149" width="2.8" height="15.0" fill="rgb(221,147,54)" rx="2" ry="2" />
<text  x="1015.58" y="159.5" ></text>
</g>
<g >
<title>kworker/u32:2-m-128845/128845 (1 samples, 0.24%)</title><rect x="18.4" y="373" width="2.9" height="15.0" fill="rgb(232,58,46)" rx="2" ry="2" />
<text  x="21.45" y="383.5" ></text>
</g>
<g >
<title>memset_erms (2 samples, 0.48%)</title><rect x="753.5" y="245" width="5.6" height="15.0" fill="rgb(244,180,2)" rx="2" ry="2" />
<text  x="756.48" y="255.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.24%)</title><rect x="10.0" y="341" width="2.8" height="15.0" fill="rgb(236,69,53)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>kthread (1 samples, 0.24%)</title><rect x="18.4" y="341" width="2.9" height="15.0" fill="rgb(233,23,16)" rx="2" ry="2" />
<text  x="21.45" y="351.5" ></text>
</g>
<g >
<title>io_complete_rw_common (35 samples, 8.35%)</title><rect x="573.2" y="149" width="98.6" height="15.0" fill="rgb(230,58,46)" rx="2" ry="2" />
<text  x="576.25" y="159.5" >io_complete..</text>
</g>
<g >
<title>start_kernel (11 samples, 2.63%)</title><rect x="1159.0" y="309" width="31.0" height="15.0" fill="rgb(225,51,45)" rx="2" ry="2" />
<text  x="1162.02" y="319.5" >st..</text>
</g>
<g >
<title>error_entry (1 samples, 0.24%)</title><rect x="764.7" y="325" width="2.9" height="15.0" fill="rgb(232,50,16)" rx="2" ry="2" />
<text  x="767.75" y="335.5" ></text>
</g>
<g >
<title>__io_cqring_fill_event (3 samples, 0.72%)</title><rect x="590.1" y="101" width="8.5" height="15.0" fill="rgb(239,181,49)" rx="2" ry="2" />
<text  x="593.14" y="111.5" ></text>
</g>
<g >
<title>perf_ioctl (77 samples, 18.38%)</title><rect x="792.9" y="213" width="216.9" height="15.0" fill="rgb(254,131,8)" rx="2" ry="2" />
<text  x="795.91" y="223.5" >perf_ioctl</text>
</g>
</g>
</svg>
